{"name":"message","describe":"消息中心数据库设计","avatar":"","version":"4.9.4","createdTime":"2021-12-16 11:30:37","updatedTime":"2024-9-14 15:25:17","profile":{"default":{"db":"C6A38BE9-34DB-4AC5-AAC6-962488689529","dbConn":"80821A7B-1C06-4D63-8366-5AF4A7B246A0","entityInitFields":[{"defKey":"TENANT_ID","defName":"租户号","comment":"","type":"","len":32,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","refDict":"","uiHint":"","id":"50DAFF25-7D38-4B2A-8084-CCC59F390BF6","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"REVISION","defName":"乐观锁","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"","len":32,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"A146C60F-D88B-47EF-85D4-3EF8C8DE531A","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"CREATED_BY","defName":"创建人","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"","len":32,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"527B87EB-E835-4FE4-BF9B-7958A70283D1","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"CREATED_TIME","defName":"创建时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"B1D9E12A-29AC-4EFC-8D8A-4FC2CE34653D","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"defKey":"UPDATED_BY","defName":"更新人","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"","len":32,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"7B5CD37C-AD50-430A-82C1-DD970900F32E","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"UPDATED_TIME","defName":"更新时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"C66DDFAD-9354-4616-8158-E2B6466BA66E","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"}],"entityInitProperties":{}},"sql":{"delimiter":""},"dataTypeSupports":[{"defKey":"MYSQL","id":"C6A38BE9-34DB-4AC5-AAC6-962488689529"},{"defKey":"ORACLE","id":"9F4C1D4C-1678-473A-BC1D-886411B2198C"},{"defKey":"SQLServer","id":"0AC98C09-41E2-404D-A6D3-F4EE9B21557B"},{"defKey":"PostgreSQL","id":"A36FE710-235F-4D99-8F34-1F9A3C387D0F"},{"defKey":"DB2","id":"FD9EE40A-58D9-42BE-9900-AF2D8799528C"},{"defKey":"DM","id":"861B78E3-6D54-417D-B394-D9783A6FD275"},{"defKey":"GaussDB","id":"A0BF7552-C495-4320-B165-461A63C9EC74"},{"defKey":"Kingbase","id":"8A991A2C-C36D-46E3-B606-B9A44061215F"},{"defKey":"MaxCompute","id":"E70ADE4E-8C81-4A5E-A1C3-F976F53DF010"},{"defKey":"JAVA","id":"1E54AC57-502D-48B4-89D5-56E5A6D5328E"},{"defKey":"C#","id":"B74117FD-05A9-4BD1-BD5A-D9D2E2AE9334"},{"defKey":"SQLite","id":"44E3F694-7809-442C-AC6F-94D4449905D6"},{"defKey":"GBase","id":"56F4B55B-F0B8-4049-9E6B-50B95C1D793A"},{"defKey":"Hive","id":"81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2"},{"defKey":"JavaMybatis","id":"895CFD1D-4273-4D32-A2C4-CAC70200AB5B"},{"defKey":"JavaMybatisPlus","id":"A2EE7B4A-CE62-4290-B00C-B26C1BF18073"},{"defKey":"Golang","id":"B91D99E0-9B7C-416C-8737-B760957DAF09"},{"defKey":"Rust","id":"BDF457FD-9F98-4AC3-A705-7587B00A3BAB"},{"defKey":"Doris","id":"483F9346-C99E-4014-A1D2-A554606BD8A3"},{"defKey":"HighGo","id":"ABF5836C-0B7C-4007-A41C-F869325E5842"}],"codeTemplates":[{"type":"dbDDL","applyFor":"C6A38BE9-34DB-4AC5-AAC6-962488689529","isDefault":true,"createTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTO_INCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  COMMENT = '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}';\n$blankline\n","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","message":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}\n","update":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('ALTER TABLE '+before.defKey+' RENAME TO '+after.defKey);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldAdded) { \n            let ddlItem = 'ADD COLUMN `'+field.defKey+'` '+field.dbType;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            if(field.autoIncrement){\n                ddlItem += ' AUTO_INCREMENT';\n            }\n            if(field.defaultValue){\n                ddlItem += (' DEFAULT ' + field.defaultValue);\n            }\n            ddlItem += (' COMMENT \\''+field.defName+';'+field.comment+'\\'');\n            \n            if(field.index>0 && field.afterFieldKey){\n                ddlItem += (' AFTER '+field.afterFieldKey);\n            }\n            ret.push(ddlItem);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldRemoved) { \n            ret.push('DROP '+field.defKey);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' MODIFY COLUMN `'+after.defKey+'`');\n            }else{\n                changeDDL += (' CHANGE COLUMN `'+before.defKey+'` `'+after.defKey+'`');\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            let defaultValue = '';\n            if(after.defaultValue != null && after.defaultValue.length>0){\n                defaultValue = (after.defaultValue);\n            }else{\n                defaultValue = 'NULL';\n            }\n            if(defaultValue != 'NULL'){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n\n            let comment = after.defName;\n            if(after.comment){\n                comment = comment + ';' + (after.comment||'');\n            }\n            if(comment){\n                changeDDL += (' COMMENT \\''+comment+'\\';');\n            }\n            \n            ret.push(firstDDL+' '+changeDDL);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"},{"type":"dbDDL","applyFor":"9F4C1D4C-1678-473A-BC1D-886411B2198C","isDefault":true,"createTable":"CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","message":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* -------------------------------------------------- */\n创建表：\n{{~ createEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* -------------------------------------------------- */\n删除表：\n{{~ dropEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* -------------------------------------------------- */\n修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n    {{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n    {{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}\n    {{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('\\n\\t建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('\\n\\t解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}\n{{=indexChanged?'\\n\\t更改了索引':''}}\n{{=changed?'\\n\\t更改了属性':''}}\n{{=relaArray.length>0?relaArray.join(''):''}}\n{{~}}\n{{?}}","update":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD (${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ddlItem += ')';\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            changeDDL += ('MODIFY ('+after.defKey+'');\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            changeDDL += ')';\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"},{"type":"dbDDL","applyFor":"0AC98C09-41E2-404D-A6D3-F4EE9B21557B","isDefault":true,"createTable":"IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[{{=it.entity.defKey}}]') AND type in (N'U'))\nDROP TABLE [dbo].[{{=it.entity.defKey}}];\n\nCREATE TABLE [dbo].[{{=it.entity.defKey}}](\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? ' IDENTITY(1,1)' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n){{=it.separator}}\n$blankline\n{{? it.entity.defKey || it.entity.defName}}EXEC sp_addextendedproperty 'MS_Description', '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}', 'SCHEMA', dbo, 'table', {{=it.entity.defKey}}, null, null;{{?}}\n{{~it.entity.fields:field:index}}\nEXEC sp_addextendedproperty 'MS_Description', '{{=it.func.join(field.defName,field.comment,';')}}', 'SCHEMA', dbo, 'table', {{=it.entity.defKey}}, 'column', {{=field.defKey}};\n{{~}}\n","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","message":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}","update":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`EXEC sp_rename '${before.defKey}','${after.defKey}'`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `IF ((SELECT COUNT(*) FROM ::fn_listextendedproperty('MS_Description','SCHEMA', 'dbo','TABLE', '${after.defKey}', NULL, NULL)) > 0)\n            \\n\\tEXEC sp_updateextendedproperty 'MS_Description', '${commentText}','SCHEMA', 'dbo','TABLE', '${after.defKey}'\n            \\nELSE\n            \\n\\tEXEC sp_addextendedproperty 'MS_Description', '${commentText}', 'SCHEMA', 'dbo','TABLE', '${after.defKey}'\n            `;\n            ret.push(myText);\n            /*ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');*/\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD [${field.defKey}] ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `EXEC sp_addextendedproperty 'MS_Description', N'${commentText}','SCHEMA', N'dbo','TABLE', N'${entity.data.baseInfo.defKey}','COLUMN', N'${field.defKey}'`;\n                ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN [${field.defKey}]`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' ALTER COLUMN ['+after.defKey+']');\n            }else{\n                let renameText = `EXEC sp_rename '[dbo].[${entity.data.baseInfo.defKey}].[${before.defKey}]','${after.defKey}','COLUMN';`;\n                ret.push(renameText);\n                continue;\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"},{"type":"dbDDL","applyFor":"A36FE710-235F-4D99-8F34-1F9A3C387D0F","isDefault":true,"createTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? ' AUTO_INCREMENT' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","message":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}","update":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD COLUMN ${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }            \n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            if(before.dbType !== after.dbType || before.len !== after.len || before.scale !== after.scale){\n                let dbTypeDDL = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${after.defKey} TYPE ${before.dbType}`;\n                if(after.len>0){\n                    dbTypeDDL += ('('+after.len);\n                    if(parseInt(after.scale)>0){\n                        dbTypeDDL += (','+after.scale);\n                    }\n                    dbTypeDDL += ')';\n                }\n                ret.push(dbTypeDDL+';');\n            }\n            \n            if(before.defaultValue !== after.defaultValue){\n                let defaultDDL = '';\n                let defaultValue = after.defaultValue;\n                defaultValue = (defaultValue==null)?\"NULL\":(\"\"+defaultValue);\n                if(defaultValue.length>0){\n                    defaultDDL += ('SET DEFAULT ' + defaultValue);\n                }\n                let defaultTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${defaultDDL};`;\n                ret.push(defaultTpl);\n            }\n            \n            if(before.notNull !== after.notNull){\n                let notNullDDL= 'SET NULL';\n                if(after.notNull){\n                    let notNullDDL= 'SET NOT NULL';\n                }\n                let notNullTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${notNullDDL};`;\n                ret.push(notNullTpl);\n            }\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n-- 索引重建\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"},{"type":"appCode","applyFor":"1E54AC57-502D-48B4-89D5-56E5A6D5328E","isDefault":true,"content":"package cn.com.chiner.entity;\n$blankline\nimport javax.persistence.*;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n}}\n /**\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\n@Table(name=\"{{=it.entity.defKey}}\")\npublic class {{=it.func.camel(it.entity.defKey,true) }} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    {{? field.primaryKey }}\n    @Id\n    @GeneratedValue\n    {{?}}\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"," JpaBean":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport javax.persistence.*;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\n@Table(name=\"{{=it.entity.defKey}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    {{? field.primaryKey }}\n    @Id\n    @GeneratedValue\n    {{?}}\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"},{"type":"dbDDL","applyFor":"FD9EE40A-58D9-42BE-9900-AF2D8799528C","isDefault":true,"createTable":"CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","message":"","update":""},{"type":"dbDDL","applyFor":"861B78E3-6D54-417D-B394-D9783A6FD275","isDefault":true,"createTable":"CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ','('+field.defaultValue+')',' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","message":"","update":""},{"type":"appCode","applyFor":"B74117FD-05A9-4BD1-BD5A-D9D2E2AE9334","isDefault":true,"content":"using System;\nusing System.Collections.Generic;\n\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n}}\n/*\n * @author : http://www.chiner.com.cn\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\nnamespace Chiner.Application\n{\n    public partial class {{=it.func.camel(it.entity.defKey,true) }}\n    {\n    \n        {{~it.entity.fields:field:index}}\n        /// <summary>\n        /// {{=it.func.join(field.defName,field.comment,';')}}\n        /// </summary>\n        public {{=field.type}} {{=it.func.camel(field.defKey,true)}} { get; set; }\n        $blankline\n        {{~}}\n        \n    }\n}","Default":"using System;\nusing System.Collections.Generic;\n\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n}}\n/*\n * @author : http://www.chiner.com.cn\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\nnamespace PDManer.Application\n{\n    public partial class {{=it.func.camel(it.entity.defKey,true) }}\n    {\n    \n        {{~it.entity.fields:field:index}}\n        /// <summary>\n        /// {{=it.func.join(field.defName,field.comment,';')}}\n        /// </summary>\n        public {{=field.type}} {{=it.func.camel(field.defKey,true)}} { get; set; }\n        $blankline\n        {{~}}\n        \n    }\n}","SqlSugar":"using System;\nusing System.Collections.Generic;\nusing SqlSugar;\n\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    var sqlSugartable='[SugarTable(\"{{=it.entity.defKey}}\", TableDescription = \"{{=it.func.join(it.entity.defName,it.entity.comment,';')}}\")]';\n}}\n/*\n * @author : xkdong@163.com\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\nnamespace Model.DBModel\n{\n    /// <summary>\n    /// {{=it.func.join(it.entity.defName,it.entity.comment,';')}}\n    /// </summary>\n    {{=sqlSugartable}}\n    public class {{=it.entity.defKey}}\n    {\n        {{~it.entity.fields:field:index}}\n        /// <summary>\n        /// {{=it.func.join(field.defName,field.comment,';')}}\n        /// </summary>\n        {{? field.primaryKey }}\n        [SugarColumn(IsIdentity = true, IsPrimaryKey = true)]\n        {{?}}\n        public {{=field.type}} {{=it.func.camel(field.defKey,true)}}{ get; set; }\n        $blankline\n        {{~}}\n    }\n}"},{"type":"dbDDL","applyFor":"A0BF7552-C495-4320-B165-461A63C9EC74","isDefault":true,"createTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? ' AUTO_INCREMENT' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","message":"","update":""},{"type":"dbDDL","applyFor":"8A991A2C-C36D-46E3-B606-B9A44061215F","isDefault":true,"createTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","message":"","update":""},{"type":"dbDDL","applyFor":"dictSQLTemplate","isDefault":true,"content":"/* 插入字典总表[{{=it.dict.defKey}}-{{=it.dict.defName}}] */\nINSERT INTO SYS_DICT(KEY_,LABEL,INTRO,REVISION) VALUES('{{=it.dict.defKey}}','{{=it.dict.defName}}','{{=it.dict.intro}}',1);\n/* 插入字典明细表 */\n{{~it.dict.items:item:index}}\nINSERT INTO SYS_DICT_ITEM(DICT_KEY,KEY_,LABEL,SORT_,INTRO,REVISION) VALUES('{{=it.dict.defKey}}','{{=item.defKey}}','{{=item.defName}}','{{=item.sort}}','{{=item.intro}}',1);\n{{~}}"},{"type":"dbDDL","applyFor":"E70ADE4E-8C81-4A5E-A1C3-F976F53DF010","isDefault":true,"createTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTO_INCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  COMMENT = '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}';\n$blankline\n","createIndex":"","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","message":"","update":""},{"applyFor":"44E3F694-7809-442C-AC6F-94D4449905D6","type":"dbDDL","createTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTOINCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }} --{{=it.func.join(field.defName,field.comment,';')}}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  ; --{{=it.func.join(it.entity.defName,it.entity.comment,';') }}\n$blankline\n","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","message":"","update":""},{"applyFor":"56F4B55B-F0B8-4049-9E6B-50B95C1D793A","type":"dbDDL","createTable":"CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline","deleteTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","deleteIndex":"{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}","message":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* -------------------------------------------------- */\n创建表：\n{{~ createEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* -------------------------------------------------- */\n删除表：\n{{~ dropEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* -------------------------------------------------- */\n修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n    {{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n    {{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}\n    {{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('\\n\\t建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('\\n\\t解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}\n{{=indexChanged?'\\n\\t更改了索引':''}}\n{{=changed?'\\n\\t更改了属性':''}}\n{{=relaArray.length>0?relaArray.join(''):''}}\n{{~}}\n{{?}}","update":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD (${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ddlItem += ')';\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            changeDDL += ('MODIFY ('+after.defKey+'');\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            changeDDL += ')';\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"},{"applyFor":"81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2","type":"dbDDL","createTable":"/**字段名,关键字等全部用的小写*/\ndrop table if exists {{=it.entity.defKey}};\n/**补充上库名,external关键字根据建表规范看是否添加*/\ncreate [external] table if not exists {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n/**这里把varchar,char,text,date,datetime字段全部映射为string类型.tinyint unsigned,bit,Integer,tinyint,smallint,mediumint映射为int类型,int unsigned映射为bigint.其它自定义映射规则根据自己情况修改*/\n/**当长度>0只有为decimal类型或double类型时才保留长度和小数的位数*/\n{{~it.entity.fields:field:index}}\n    {{=it.func.lowerCase(field.defKey)}} {{=it.func.lowerCase(field.type)=='varchar'||it.func.lowerCase(field.type)=='char'||it.func.lowerCase(field.type)=='text'||it.func.lowerCase(field.type)=='date'||it.func.lowerCase(field.type)=='datetime' ? 'string':it.func.lowerCase(field.type)=='tinyint unsigned'||it.func.lowerCase(field.type)=='bit'||it.func.lowerCase(field.type)=='integer'||it.func.lowerCase(field.type)=='tinyint'||it.func.lowerCase(field.type)=='smallint'||it.func.lowerCase(field.type)=='mediumint' ? 'int':it.func.lowerCase(field.type)=='int unsigned' ? 'bigint':it.func.lowerCase(field.type)}}{{?field.len>0&&(it.func.lowerCase(field.type)=='decimal'||it.func.lowerCase(field.type)=='double')}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{=')'}}{{?}}{{?}} comment '{{=it.func.join(field.defName,field.comment,'')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n{{?}}\n)\n{{\n    let partitionedBy = it.entity.properties['partitioned by'];\n    partitionedBy = partitionedBy?partitionedBy:'请在扩展属性中配置[partitioned by]属性';\n}}\ncomment '{{=it.func.join(it.entity.defName,';') }}'\n/**是否分区表,分区字段名和字段注释自定义*/\n[partitioned by {{=partitionedBy}}]\n/**文件存储格式自定义*/\n[stored as orc]\n/**hdfs上的地址自定义*/\n[location xxx]\n;","createView":"","deleteTable":"","createIndex":"","deleteIndex":"","message":"","update":""},{"applyFor":"895CFD1D-4273-4D32-A2C4-CAC70200AB5B","type":"appCode","Controller":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.controller;\n$blankline\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.service.{{=serviceClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表控制层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Api(tags = \"{{=it.entity.defName}}对象功能接口\")\n@RestController\n@RequestMapping(\"/{{=it.func.camel(it.entity.defKey,false)}}\")\npublic class {{=beanClass}}Controller{\n    @Autowired\n    private {{=serviceClass}} {{=serviceVarName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    @ApiOperation(\"通过ID查询单条数据\")\n    @GetMapping(\"{{{=it.func.camel(pkVarName,false)}}}\")\n    public ResponseEntity<{{=beanClass}}> queryById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.queryById({{=pkVarName}}));\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    @ApiOperation(\"分页查询\")\n    @GetMapping\n    public ResponseEntity<Page<{{=beanClass}}>> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        return ResponseEntity.ok({{=serviceVarName}}.paginQuery({{=beanVarName}}, pageRequest));\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"新增数据\")\n    @PostMapping\n    public ResponseEntity<{{=beanClass}}> add({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.insert({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"更新数据\")\n    @PutMapping\n    public ResponseEntity<{{=beanClass}}> edit({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.update({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    @ApiOperation(\"通过主键删除数据\")\n    @DeleteMapping\n    public ResponseEntity<Boolean> deleteById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.deleteById({{=pkVarName}}));\n    }\n}","Service":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.service;\n$blankline\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务接口\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\npublic interface {{=serviceClass}}{\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    \n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest);\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} insert({{=beanClass}} {{=beanVarName}});\n\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    boolean deleteById({{=pkDataType}} {{=pkVarName}});\n}","ServiceImpl":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkVarNameU = \"UndefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkVarNameU = it.func.camel(field.defKey,true);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    var mapperName = beanVarName+'Mapper';\n    \n}}package {{=pkgName}}.service.impl;\n$blankline\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.mapper.{{=beanClass}}Mapper;\nimport {{=pkgName}}.service.{{=serviceClass}};\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务实现类\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Service\npublic class {{=serviceClass}}Impl implements {{=serviceClass}}{\n    @Autowired\n    private {{=beanClass}}Mapper {{=mapperName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    public {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}}){\n        return {{=mapperName}}.queryById({{=pkVarName}});\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    public Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        long total = {{=mapperName}}.count({{=beanVarName}});\n        return new PageImpl<>({{=mapperName}}.queryAllByLimit({{=beanVarName}}, pageRequest), pageRequest, total);\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} insert({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.insert({{=beanVarName}});\n        return {{=beanVarName}};\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} update({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.update({{=beanVarName}});\n        return queryById({{=beanVarName}}.get{{=pkVarNameU}}());\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    public boolean deleteById({{=pkDataType}} {{=pkVarName}}){\n        int total = {{=mapperName}}.deleteById({{=pkVarName}});\n        return total > 0;\n    }\n}","Mapper":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.mapper;\n$blankline\nimport java.util.List;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport org.springframework.data.domain.Pageable;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表数据库访问层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Mapper\npublic interface {{=beanClass}}Mapper{\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    \n    /** \n     * 分页查询指定行数据\n     *\n     * @param {{=beanVarName}} 查询条件\n     * @param pageable 分页对象\n     * @return 对象列表\n     */\n    List<{{=beanClass}}> queryAllByLimit({{=beanClass}} {{=beanVarName}}, @Param(\"pageable\") Pageable pageable);\n\n    /** \n     * 统计总行数\n     *\n     * @param {{=beanVarName}} 查询条件\n     * @return 总行数\n     */\n    long count({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 影响行数\n     */\n    int insert({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 批量新增数据\n     *\n     * @param entities List<{{=beanClass}}> 实例对象列表\n     * @return 影响行数\n     */\n    int insertBatch(@Param(\"entities\") List<{{=beanClass}}> entities);\n    \n    /** \n     * 批量新增或按主键更新数据\n     *\n     * @param entities List<{{=beanClass}}> 实例对象列表\n     * @return 影响行数\n     */\n    int insertOrUpdateBatch(@Param(\"entities\") List<{{=beanClass}}> entities);\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 影响行数\n     */\n    int update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 影响行数\n     */\n    int deleteById({{=pkDataType}} {{=pkVarName}});\n}","Mapper.xml":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    var pkField = \"UNDEFINED_ID\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkField = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"{{=pkgName}}.mapper.{{=beanClass}}Mapper\">\n    <resultMap type=\"{{=pkgName}}.entity.{{=beanClass}}\" id=\"{{=beanClass}}Map\">\n    {{~it.entity.fields:field:index}}\n        <result property=\"{{=it.func.camel(field.defKey,false)}}\" column=\"{{=field.defKey}}\" jdbcType=\"{{=field.type}}\"/>\n    {{~}}\n    </resultMap>\n    $blankline\n    <!-- 通过ID查询单条数据 -->\n    <select id=\"queryById\" resultMap=\"{{=beanClass}}Map\">\n        select\n            {{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}}\n        from {{=it.entity.defKey}}\n        where {{=pkField}} = #{{{=pkVarName}}}\n    </select>\n    $blankline\n    <!--分页查询指定行数据-->\n    <select id=\"queryAllByLimit\" resultMap=\"{{=beanClass}}Map\">\n        select\n            {{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}}\n        from {{=it.entity.defKey}}\n        <where>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                and {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}}\n            </if>\n        {{~}}\n        </where>\n        limit #{pageable.offset}, #{pageable.pageSize}\n    </select>\n    $blankline\n    <!--统计总行数-->\n    <select id=\"count\" resultType=\"java.lang.Long\">\n        select count(1)\n        from {{=it.entity.defKey}}\n        <where>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                and {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}}\n            </if>\n        {{~}}\n        </where>\n    </select>\n    $blankline\n    <!--新增数据-->\n    <insert id=\"insert\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values ({{=it.entity.fields.map(function(e,i){return '#{'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n    </insert>\n    $blankline\n    <!-- 批量新增数据 -->\n    <insert id=\"insertBatch\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            ({{=it.entity.fields.map(function(e,i){return '#{entity.'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n        </foreach>\n    </insert>\n    $blankline\n    <!-- 批量新增或按主键更新数据 -->\n    <insert id=\"insertOrUpdateBatch\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            ({{=it.entity.fields.map(function(e,i){return '#{entity.'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n        </foreach>\n        on duplicate key update\n        {{=it.entity.fields.map(function(e,i){return e.defKey + '=values('+e.defKey+')'}).join(',\\n\\t\\t')}}\n    </insert>\n    $blankline\n    <!-- 更新数据 -->\n    <update id=\"update\">\n        update {{=it.entity.defKey}}\n        <set>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}},\n            </if>\n        {{~}}\n        </set>\n        where {{=pkField}} = #{{{=pkVarName}}}\n    </update>\n    $blankline\n    <!--通过主键删除-->\n    <delete id=\"deleteById\">\n        delete from {{=it.entity.defKey}} where {{=pkField}} = #{{{=pkVarName}}}\n    </delete>\n</mapper>\n\n","Entity":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"},{"applyFor":"A2EE7B4A-CE62-4290-B00C-B26C1BF18073","type":"appCode","Controller":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.controller;\n$blankline\nimport java.util.List;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.service.{{=serviceClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表控制层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Api(tags = \"{{=it.entity.defName}}对象功能接口\")\n@RestController\n@RequestMapping(\"/{{=it.func.camel(it.entity.defKey,false)}}\")\npublic class {{=beanClass}}Controller{\n    @Autowired\n    private {{=serviceClass}} {{=serviceVarName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    @ApiOperation(\"通过ID查询单条数据\")\n    @GetMapping(\"{{{=it.func.camel(pkVarName,false)}}}\")\n    public ResponseEntity<{{=beanClass}}> queryById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.queryById({{=pkVarName}}));\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    @ApiOperation(\"分页查询\")\n    @GetMapping\n    public ResponseEntity<PageImpl<{{=beanClass}}>> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        //1.分页参数\n        long current = pageRequest.getPageNumber();\n        long size = pageRequest.getPageSize();\n\n        //2.分页查询\n        /*把Mybatis的分页对象做封装转换，MP的分页对象上有一些SQL敏感信息，还是通过spring的分页模型来封装数据吧*/\n        com.baomidou.mybatisplus.extension.plugins.pagination.Page<{{=beanClass}}> pageResult = {{=serviceVarName}}.paginQuery({{=beanVarName}}, current,size);\n\n        //3. 分页结果组装\n        List<{{=beanClass}}> dataList = pageResult.getRecords();\n        long total = pageResult.getTotal();\n        PageImpl<{{=beanClass}}> retPage = new PageImpl<{{=beanClass}}>(dataList,pageRequest,total);\n        return ResponseEntity.ok(retPage);\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"新增数据\")\n    @PostMapping\n    public ResponseEntity<{{=beanClass}}> add({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.insert({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"更新数据\")\n    @PutMapping\n    public ResponseEntity<{{=beanClass}}> edit({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.update({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    @ApiOperation(\"通过主键删除数据\")\n    @DeleteMapping\n    public ResponseEntity<Boolean> deleteById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.deleteById({{=pkVarName}}));\n    }\n}","Service":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.service;\n$blankline\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务接口\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\npublic interface {{=serviceClass}}{\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    $blankline\n    /**\n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param current 当前页码\n     * @param size  每页大小\n     * @return\n     */\n    Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, long current, long size);\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} insert({{=beanClass}} {{=beanVarName}});\n\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    boolean deleteById({{=pkDataType}} {{=pkVarName}});\n}","ServiceImpl":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkVarNameU = \"UndefinedId\";\n    var pkFieldKey = \"UNDEFINED\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkFieldKey = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkVarNameU = it.func.camel(field.defKey,true);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    var mapperName = beanVarName+'Mapper';\n    \n}}package {{=pkgName}}.service.impl;\n$blankline\nimport cn.hutool.core.util.StrUtil;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.extension.conditions.update.LambdaUpdateChainWrapper;\n\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.mapper.{{=beanClass}}Mapper;\nimport {{=pkgName}}.service.{{=serviceClass}};\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务实现类\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Service\npublic class {{=serviceClass}}Impl implements {{=serviceClass}}{\n    @Autowired\n    private {{=beanClass}}Mapper {{=mapperName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    public {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}}){\n        return {{=mapperName}}.selectById({{=pkVarName}});\n    }\n    $blankline\n    /**\n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param current 当前页码\n     * @param size  每页大小\n     * @return\n     */\n    public Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, long current, long size){\n        //1. 构建动态查询条件\n        LambdaQueryWrapper<{{=beanClass}}> queryWrapper = new LambdaQueryWrapper<>();\n        {{~it.entity.fields.filter(function(e){return e[\"type\"]===\"String\"&&e.defKey !== pkFieldKey}):field:index}}\n        if(StrUtil.isNotBlank({{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}())){\n            queryWrapper.eq({{=beanClass}}::get{{=it.func.camel(field.defKey,true)}}, {{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}());\n        }\n        {{~}}\n\n        //2. 执行分页查询\n        Page<{{=beanClass}}> pagin = new Page<>(current , size , true);\n        IPage<{{=beanClass}}> selectResult = {{=mapperName}}.selectByPage(pagin , queryWrapper);\n        pagin.setPages(selectResult.getPages());\n        pagin.setTotal(selectResult.getTotal());\n        pagin.setRecords(selectResult.getRecords());\n\n        //3. 返回结果\n        return pagin;\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} insert({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.insert({{=beanVarName}});\n        return {{=beanVarName}};\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} update({{=beanClass}} {{=beanVarName}}){\n        //1. 根据条件动态更新\n        LambdaUpdateChainWrapper<{{=beanClass}}> chainWrapper = new LambdaUpdateChainWrapper<{{=beanClass}}>({{=mapperName}});\n        {{~it.entity.fields.filter(function(e){return e[\"type\"]===\"String\"&&e.defKey !== pkFieldKey}):field:index}}\n        if(StrUtil.isNotBlank({{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}())){\n            chainWrapper.eq({{=beanClass}}::get{{=it.func.camel(field.defKey,true)}}, {{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}());\n        }\n        {{~}}\n        //2. 设置主键，并更新\n        chainWrapper.set({{=beanClass}}::get{{=pkVarNameU}}, {{=beanVarName}}.get{{=pkVarNameU}}());\n        boolean ret = chainWrapper.update();\n        //3. 更新成功了，查询最最对象返回\n        if(ret){\n            return queryById({{=beanVarName}}.get{{=pkVarNameU}}());\n        }else{\n            return {{=beanVarName}};\n        }\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    public boolean deleteById({{=pkDataType}} {{=pkVarName}}){\n        int total = {{=mapperName}}.deleteById({{=pkVarName}});\n        return total > 0;\n    }\n}","Mapper":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.mapper;\n$blankline\n\nimport com.baomidou.mybatisplus.core.conditions.Wrapper;\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.core.toolkit.Constants;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表数据库访问层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Mapper\npublic interface {{=beanClass}}Mapper  extends BaseMapper<{{=beanClass}}>{\n    /** \n     * 分页查询指定行数据\n     *\n     * @param page 分页参数\n     * @param wrapper 动态查询条件\n     * @return 分页对象列表\n     */\n    IPage<{{=beanClass}}> selectByPage(IPage<{{=beanClass}}> page , @Param(Constants.WRAPPER) Wrapper<{{=beanClass}}> wrapper);\n}","Mapper.xml":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    var pkField = \"UNDEFINED_ID\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkField = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n$blankline\n\n<mapper namespace=\"{{=pkgName}}.mapper.{{=beanClass}}Mapper\">\n     <select id=\"selectByPage\" resultType=\"{{=pkgName}}.entity.{{=beanClass}}\">\n        select * from user ${ew.customSqlSegment}\n    </select>\n</mapper>\n\n","Entity":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\n@TableName(\"{{=it.entity.defKey}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    {{? field.primaryKey }}\n    @TableId\n    {{?}}\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"},{"applyFor":"B91D99E0-9B7C-416C-8737-B760957DAF09","type":"appCode","content":"{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1<10?\"0\"+today.getMonth():today.getMonth();\n    var days=today.getDate()<10?\"0\"+today.getDate():today.getDate();\n    var hours = today.getHours()<10?\"0\"+today.getHours():today.getHours();         \n\tvar minutes = today.getMinutes()<10?\"0\"+today.getMinutes():today.getMinutes();      \n\tvar seconds = today.getSeconds()<10?\"0\"+today.getSeconds():today.getSeconds();    \n}}\n// Package models  {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}\n// author : http://www.liyang.love\n// date : {{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\n// desc : {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}\npackage models\n\n$blankline\n\n// {{=it.func.camel(it.entity.defKey,true) }}  {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}。\n// 说明:{{=it.entity.comment}}\n// 表名:{{=it.entity.defKey}}\n// group: {{=it.func.camel(it.entity.defKey,true) }}\n// obsolete:\n// appliesto:go 1.8+;\n// namespace:hongmouer.his.models.{{=it.func.camel(it.entity.defKey,true) }}\n// assembly: hongmouer.his.models.go\n// class:HongMouer.HIS.Models.{{=it.func.camel(it.entity.defKey,true) }}\n// version:{{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\ntype {{=it.func.camel(it.entity.defKey,true) }} struct {\n    {{~it.entity.fields:field:index}}\n    {{=formatGoLang(it.func.camel(field.defKey,true),null,field,it.entity.fields,null,1)}} {{=formatGoLang(field.type,\"type\",field,it.entity.fields,10,3)}}  `gorm:\"column:{{=field.primaryKey?\"primaryKey;\":\"\"}}{{=field.defKey}}\" json:\"{{=it.func.camel(field.defKey,true)}}\"` {{=formatGoLang(\"gorm:column:\"+field.defKey+\" json:\"+it.func.camel(field.defKey,true),null,field,it.entity.fields,null,2)}}  //type:{{=formatGoLang(field.type,\"type\",field,it.entity.fields,null,3)}}  comment:{{=formatGoLang(it.func.join(field.defName,field.comment,';'),\"defName\",field,it.entity.fields,null,4)}}  version:{{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\n    {{~}}\n}\n\n\n$blankline\n// TableName 表名:{{=it.entity.defKey}}，{{=it.entity.defName}}。\n// 说明:{{=it.entity.comment}}\nfunc (ZentaoUserInfo) TableName() string {\n\treturn \"{{=it.entity.defKey}}\"\n}\n\n{{\n\nfunction formatGoLang(str, fieldName, field, fileds, emptLength, isFiled) {\n    var maxLength = 0;\n\n    if (isFiled == 1) {\n        for (var i = 0; i < fileds.length; i++) {\n            if (getBlength(it.func.camel(fileds[i].defKey, true)) > maxLength) {\n                maxLength = getBlength(it.func.camel(fileds[i].defKey, true)) + 2;\n            }\n        }\n    } else if (isFiled == 2) {\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = \"gorm:column:\" + fileds[i].defKey + \" json:\" + it.func.camel(fileds[i].defKey, true);\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 2;\n            }\n        }\n        var empt = \"\";\n        var strLength = getBlength(str);\n        if (field.primaryKey) {\n            strLength += getBlength(\"primaryKey;\");\n        }\n        for (var j = 0; j < maxLength - strLength; j++) {\n            empt += ' ';\n        }\n        return empt;\n    } else if (isFiled == 3) {\n        /*获取某个字段的最大长度*/\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = eval(\"fileds[\" + i + \"].\" + fieldName);\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 1;\n            }\n        }\n    } else if (isFiled == 4) {\n        /*获取某个字段的最大长度*/\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = fileds[i].comment + \";\" + fileds[i].defName;\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 1;\n            }\n        }\n    }\n    else {\n        maxLength = emptLength;\n    }\n\n    var strLength = getBlength(str);\n    for (var j = 0; j < maxLength - strLength; j++) {\n        str += ' ';\n    }\n    return str;\n}\n\nfunction getBlength(str) {\n    var n = 0;\n    for (var i = str.length; i--;) {\n        n += str.charCodeAt(i) > 255 ? 2 : 1;\n    }\n    return n;\n} \n\n}}"},{"applyFor":"BDF457FD-9F98-4AC3-A705-7587B00A3BAB","type":"appCode","struct":"use chrono::{DateTime, Local};\nuse serde::{Deserialize, Serialize};\n$blankline\n/// {{=it.entity.defName}}\n#[derive(Serialize, Deserialize, Debug, Clone)]\n{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    \n}}\npub struct {{=beanClass}} {\n    {{~it.entity.fields:field:index}}\n    {{\n        let fieldDateType = field.type;\n        if(!field.notNull){\n            fieldDateType = 'Option<'+fieldDateType+'>';\n        }\n    }}/// {{=field.defName}}\n    pub {{=it.func.camel(field.defKey,false)}}: {{=fieldDateType}},\n    {{~}}\n}\n"},{"applyFor":"483F9346-C99E-4014-A1D2-A554606BD8A3","type":"dbDDL","createTable":"{{let dorisDistributedBy = it.entity.properties['dorisDistributedBy'];\n    dorisDistributedBy = dorisDistributedBy?dorisDistributedBy:'请在表的扩展属性中配置[dorisDistributedBy]属性';\n}}CREATE TABLE IF NOT EXISTS  {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    `{{=field.defKey}}` {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : '' }}\n{{~}}\n)  COMMENT '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}'\n{{=dorisDistributedBy}} ;\n$blankline\n","createView":"","deleteTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};","createIndex":"","deleteIndex":"","message":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}\n","update":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('ALTER TABLE '+before.defKey+' RENAME TO '+after.defKey);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldAdded) { \n            let ddlItem = 'ADD COLUMN `'+field.defKey+'` '+field.dbType;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            if(field.autoIncrement){\n                ddlItem += ' AUTO_INCREMENT';\n            }\n            if(field.defaultValue){\n                ddlItem += (' DEFAULT ' + field.defaultValue);\n            }\n            ddlItem += (' COMMENT \\''+field.defName+';'+field.comment+'\\'');\n            \n            if(field.index>0 && field.afterFieldKey){\n                ddlItem += (' AFTER '+field.afterFieldKey);\n            }\n            ret.push(ddlItem);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldRemoved) { \n            ret.push('DROP '+field.defKey);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' MODIFY COLUMN `'+after.defKey+'`');\n            }else{\n                changeDDL += (' CHANGE COLUMN `'+before.defKey+'` `'+after.defKey+'`');\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            let defaultValue = '';\n            if(after.defaultValue != null && after.defaultValue.length>0){\n                defaultValue = (after.defaultValue);\n            }else{\n                defaultValue = 'NULL';\n            }\n            if(defaultValue != 'NULL'){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n\n            let comment = after.defName;\n            if(after.comment){\n                comment = comment + ';' + (after.comment||'');\n            }\n            if(comment){\n                changeDDL += (' COMMENT \\''+comment+'\\';');\n            }\n            \n            ret.push(firstDDL+' '+changeDDL);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"},{"applyFor":"ABF5836C-0B7C-4007-A41C-F869325E5842","type":"dbDDL","createTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{? field.autoIncrement}}SERIAL{{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createView":"","deleteTable":"","createIndex":"","deleteIndex":"","message":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}","update":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD COLUMN ${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }            \n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            if(before.dbType !== after.dbType || before.len !== after.len || before.scale !== after.scale){\n                let dbTypeDDL = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${after.defKey} TYPE ${before.dbType}`;\n                if(after.len>0){\n                    dbTypeDDL += ('('+after.len);\n                    if(parseInt(after.scale)>0){\n                        dbTypeDDL += (','+after.scale);\n                    }\n                    dbTypeDDL += ')';\n                }\n                ret.push(dbTypeDDL+';');\n            }\n            \n            if(before.defaultValue !== after.defaultValue){\n                let defaultDDL = '';\n                let defaultValue = after.defaultValue;\n                defaultValue = (defaultValue==null)?\"NULL\":(\"\"+defaultValue);\n                if(defaultValue.length>0){\n                    defaultDDL += ('SET DEFAULT ' + defaultValue);\n                }\n                let defaultTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${defaultDDL};`;\n                ret.push(defaultTpl);\n            }\n            \n            if(before.notNull !== after.notNull){\n                let notNullDDL= 'SET NULL';\n                if(after.notNull){\n                    let notNullDDL= 'SET NOT NULL';\n                }\n                let notNullTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${notNullDDL};`;\n                ret.push(notNullTpl);\n            }\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n-- 索引重建\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"}],"generatorDoc":{"docTemplate":""},"relationFieldSize":"15","uiHint":[{"defKey":"Input","defName":"普通输入框","id":"5FDAAD23-51D9-4AA9-9F19-FC50A5B4ECA3"},{"defKey":"Select","defName":"下拉输入框","id":"6BAA761E-8506-46C7-9D79-6B1B81A7E3B4"},{"defKey":"CheckBox","defName":"复选框","id":"FEE0EF5F-89F1-45AC-B37B-1F8B27ACF285"},{"defKey":"RadioBox","defName":"单选框","id":"CC67D9EE-AA1A-4641-907A-9D25CF170443"},{"defKey":"Double","defName":"小数输入","id":"972BF495-55B7-49ED-87A1-2AF74C49DD69"},{"defKey":"Integer","defName":"整数输入","id":"C5E2FD87-EBD9-429D-BABC-05929361A4A5"},{"defKey":"Money","defName":"金额输入","id":"FD7D9EA1-6CCD-4ACF-9B00-FE80604F7E97"},{"defKey":"Date","defName":"日期输入","id":"12F1E150-CBD3-4A28-806C-560BD861E110"},{"defKey":"DataYearMonth","defName":"年月输入","id":"E8AA5C35-C340-4ADC-8962-B7DF0A902DF2"},{"defKey":"Text","defName":"长文本输入","id":"75D04FBF-3BDE-4210-9E79-064378E397F9"},{"defKey":"RichText","defName":"富文本输入","id":"9B8D2081-E8AD-4E1F-9C12-B0FB22CA7B83"}],"menuWidth":"313px","headers":[{"refKey":"defKey","hideInGraph":false,"freeze":false},{"refKey":"defName","hideInGraph":false,"freeze":false},{"refKey":"primaryKey","hideInGraph":false,"freeze":false},{"refKey":"notNull","hideInGraph":true,"freeze":false},{"refKey":"autoIncrement","hideInGraph":true,"freeze":false},{"refKey":"domain","hideInGraph":true,"freeze":false},{"refKey":"type","hideInGraph":false,"freeze":false},{"refKey":"len","hideInGraph":false,"freeze":false},{"refKey":"scale","hideInGraph":false,"freeze":false},{"refKey":"comment","hideInGraph":true,"freeze":false},{"refKey":"refDict","hideInGraph":true,"freeze":false},{"refKey":"defaultValue","hideInGraph":true,"freeze":false},{"refKey":"isStandard","hideInGraph":false,"freeze":false},{"refKey":"uiHint","hideInGraph":true,"freeze":false},{"refKey":"extProps","hideInGraph":true,"freeze":false,"enable":false}],"extAttrProps":{"attr1":{"editType":"","optionsData":"","optionsFetcher":""},"attr2":{"editType":"","optionsData":"","optionsFetcher":""},"attr3":{"editType":"","optionsData":"","optionsFetcher":""},"attr4":{"editType":"","optionsData":"","optionsFetcher":""},"attr5":{"editType":"","optionsData":"","optionsFetcher":""},"attr6":{"editType":"","optionsData":"","optionsFetcher":""},"attr7":{"editType":"","optionsData":"","optionsFetcher":""},"attr8":{"editType":"","optionsData":"","optionsFetcher":""},"attr9":{"editType":"","optionsData":"","optionsFetcher":""}}},"entities":[{"id":"47ECB617-C8C2-429F-9355-C28ECE19EBDC","defKey":"mail_configure","defName":"邮件配置","comment":"主要存储邮件发送方账号信息","properties":{},"fields":[{"defKey":"REVISION","defName":"乐观锁","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"24233925-CA5C-44D6-845A-F559CAC9C3BE","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"id","defName":"id","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"A99D4E40-6D18-4A9F-AB23-8F9F86A1ABFE","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"logical_id","defName":"逻辑id","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"E7A9380B-DCA6-4FEF-8B57-1F9EB268F5FF","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":2,"defKey":"smtp_service","defName":"邮件Smtp服务器","comment":"","domain":"","type":"VARCHAR","len":64,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(64)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"1A146E83-47C6-47B5-8D06-519B98B0E0BB","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":3,"defKey":"send_email","defName":"发送邮件地址","comment":"","domain":"","type":"VARCHAR","len":64,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(64)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"B59CED7C-76FB-4D73-8815-0C197C26C3AB","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":4,"defKey":"send_pwd","defName":"邮件发送密码","comment":"","domain":"","type":"VARCHAR","len":64,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(64)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"FAE00DBD-6BB6-4A01-840B-BCE8234BB856","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":5,"defKey":"state","defName":"状态","comment":"1：启用,2：禁用,默认为1","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"1","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"488B8E51-D791-4E3E-B70D-15B28D773551","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":6,"defKey":"created_by_id","defName":"创建人Id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"8AC42377-2CEA-4B1F-B02C-CB1DC84F1ABF","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":7,"defKey":"created_by_name","defName":"创建人姓名","comment":"","domain":"","type":"VARCHAR","len":128,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(128)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"AE89822E-BAEA-4215-929E-907FBD3ADD2D","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":8,"defKey":"created_time","defName":"创建时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"DCBBF9FD-106D-4359-B581-3D1504FA98FB","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"rowNo":9,"defKey":"updated_by_id","defName":"更新人Id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"19F60AD5-7938-496C-A21F-D9DEC359CFD0","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":10,"defKey":"updated_by_name","defName":"更新人姓名","comment":"","domain":"","type":"VARCHAR","len":128,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(128)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"294F435E-CB42-4013-85F5-1E805CBCCE6A","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":11,"defKey":"updated_time","defName":"更新时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"4CF039FB-8EBE-4CE0-82DC-D97151130C49","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"}],"indexes":[{"defKey":"PRIMARY","unique":true,"defName":null,"comment":"","fields":[{"ascOrDesc":"A","id":"71245689-7A88-4ECD-A208-51A292DB563C","fieldDefKey":"35DB96DB-4AE0-4DE4-85E7-20E35271E04C"}],"id":"C4249153-E558-4EF5-9B17-F46B13A6B250"}],"headers":[{"freeze":true,"refKey":"hideInGraph","hideInGraph":true},{"freeze":false,"refKey":"defKey","hideInGraph":false},{"freeze":false,"refKey":"defName","hideInGraph":false},{"freeze":false,"refKey":"primaryKey","hideInGraph":false},{"freeze":false,"refKey":"notNull","hideInGraph":true},{"freeze":false,"refKey":"autoIncrement","hideInGraph":true},{"freeze":false,"refKey":"domain","hideInGraph":true},{"freeze":false,"refKey":"type","hideInGraph":false},{"freeze":false,"refKey":"len","hideInGraph":false},{"freeze":false,"refKey":"scale","hideInGraph":false},{"freeze":false,"refKey":"comment","hideInGraph":true},{"freeze":false,"refKey":"refDict","hideInGraph":true},{"freeze":false,"refKey":"defaultValue","hideInGraph":true},{"freeze":false,"refKey":"isStandard","hideInGraph":false},{"freeze":false,"refKey":"uiHint","hideInGraph":true},{"refKey":"extProps","hideInGraph":true,"freeze":false}],"correlations":[],"type":"P","sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{}},{"id":"769000B3-8521-4C5C-B6BF-93C5D2B175D1","defKey":"mail_message","defName":"邮件消息","comment":"","properties":{},"fields":[{"defKey":"REVISION","defName":"乐观锁","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"412FC2A7-C173-4BEA-9D0D-27B4B46983B6","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"id","defName":"id","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"88AED3DD-05C6-49D2-B0B1-46056AFAC3BB","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"logical_id","defName":"逻辑id","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"BA54B886-13A4-4250-9029-79340667733A","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"message_id","defName":"消息id","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","id":"13558839-3718-454D-8F6B-6BB7760DCBFC"},{"defKey":"receiver_id","defName":"消息接收人id","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","id":"DB3732E6-E521-45A9-8D76-D5ED0D12AFAA"},{"rowNo":2,"defKey":"mail_template_id","defName":"邮件模板id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"B75BD3B7-8864-46B2-9099-8AD555DAFA7A","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":5,"defKey":"mail_configuer_id","defName":"邮件发送信息配置id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"97418998-257A-48BD-9570-D2CE49E54EFF","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":3,"defKey":"mail_title","defName":"邮件标题","comment":"","domain":"","type":"VARCHAR","len":500,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(512)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"949BA5D1-716B-4888-89BE-9B3E363D8AFA","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":4,"defKey":"mail_body","defName":"邮件内容","comment":"","domain":"","type":"TEXT","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"TEXT","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"87DD1EBE-596A-4A18-809C-3D3EB70C570F","baseType":"21FC5871-A333-438B-907B-C3008C6090FE"},{"rowNo":6,"defKey":"receiver_email","defName":"收件邮箱","comment":"支持多个邮件一起发送，不同的接受邮件地址间通过“,”连接起来","domain":"","type":"VARCHAR","len":1000,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"TEXT","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"45F4BE1C-156D-412B-9CE5-FA23B7740E3A","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"receiver_cc_email","defName":"抄送邮箱","comment":"","type":"VARCHAR","len":1000,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"","id":"CC4BDBAD-CE72-4965-9734-DD6A78958D28"},{"rowNo":7,"defKey":"total_send_num","defName":"总共发送次数","comment":"默认为1一次","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"1","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"5EFB2FBE-4E91-40D2-97E7-F57F81DB5B9C","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":8,"defKey":"send_frequency","defName":"发送频率间隔(单位秒)","comment":"单位为秒，只有要求发送多次的才有效","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"AE614028-F666-496F-A185-8496083F679B","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":9,"defKey":"start_send_time","defName":"开始发送时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"2A1BFE86-F6E7-4350-9400-1267BE19D535","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"rowNo":10,"defKey":"has_send_num","defName":"已经发送次数","comment":"","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"4464BEAD-7A75-428F-9F89-17D85FD4B3E7","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":11,"defKey":"last_send_time","defName":"上一次发送时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"C0D9A43E-5262-46CC-9E01-2F270B28ACF6","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"defKey":"next_send_time","defName":"下一次发送时间","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213","extProps":{},"domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","id":"31C77C59-5549-46E5-A777-9C1BAF94F03C"},{"rowNo":12,"defKey":"send_state","defName":"发送状态","comment":"1：待发送2：发送中（针对发送多次的，还未发送完都是这个状态）3：已发送默认为1","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"1","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"84149C91-5B68-436D-97E8-CCAFC7C23FBB","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":13,"defKey":"smtp_service","defName":"邮件Smtp服务器","comment":"","domain":"","type":"VARCHAR","len":200,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(64)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"46E2840D-56B1-4503-86EF-6D1D59A8F052","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":14,"defKey":"send_email","defName":"发送邮件地址","comment":"","domain":"","type":"VARCHAR","len":200,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(64)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"A42EDA47-0679-4A31-AE98-D9E514CBAE6D","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":15,"defKey":"send_pwd","defName":"邮件发送密码","comment":"","domain":"","type":"VARCHAR","len":200,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(64)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"E5236EB0-357A-4487-A6DC-1034B085E2A0","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":16,"defKey":"created_by_id","defName":"创建人Id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"B50AC572-B25F-4DA9-AE75-0C16AF44D181","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":17,"defKey":"created_by_name","defName":"创建人姓名","comment":"","domain":"","type":"VARCHAR","len":200,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(128)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"FBCB0C00-2F3C-4B90-A1BD-F12076D007A8","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":18,"defKey":"created_time","defName":"创建时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"585CA8B5-C76A-42C5-AAFB-88819AD16B79","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"rowNo":19,"defKey":"updated_by_id","defName":"更新人Id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"BB0FC1B4-5667-4894-89C8-018FFC82D663","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":20,"defKey":"updated_by_name","defName":"更新人姓名","comment":"","domain":"","type":"VARCHAR","len":200,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(128)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"72F6158A-F98B-4DFB-A4AA-E0EAD79FEA91","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":21,"defKey":"updated_time","defName":"更新时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"DF3DEF52-C06D-4409-B0E3-C6AF52867A8F","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"}],"indexes":[{"defKey":"PRIMARY","unique":true,"defName":null,"comment":"","fields":[{"ascOrDesc":"A","id":"12717EBE-6A8A-42C8-AC66-54564720F221","fieldDefKey":"8C846539-8AA9-40EE-89D9-61FC87FEB736"}],"id":"B089D566-EF60-4DB4-871C-52634A75AE29"}],"headers":[{"freeze":true,"refKey":"hideInGraph","hideInGraph":true},{"freeze":false,"refKey":"defKey","hideInGraph":false},{"freeze":false,"refKey":"defName","hideInGraph":false},{"freeze":false,"refKey":"primaryKey","hideInGraph":false},{"freeze":false,"refKey":"notNull","hideInGraph":true},{"freeze":false,"refKey":"autoIncrement","hideInGraph":true},{"freeze":false,"refKey":"domain","hideInGraph":true},{"freeze":false,"refKey":"type","hideInGraph":false},{"freeze":false,"refKey":"len","hideInGraph":false},{"freeze":false,"refKey":"scale","hideInGraph":false},{"freeze":false,"refKey":"comment","hideInGraph":true},{"freeze":false,"refKey":"refDict","hideInGraph":true},{"freeze":false,"refKey":"defaultValue","hideInGraph":true},{"freeze":false,"refKey":"isStandard","hideInGraph":false},{"freeze":false,"refKey":"uiHint","hideInGraph":true},{"refKey":"extProps","hideInGraph":true,"freeze":false}],"correlations":[],"type":"P","sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{}},{"id":"47E46EAA-C32D-4FF2-8BA3-F9C9C1B95C9C","defKey":"mail_send_logs","defName":"邮件发送日志表","comment":"","properties":{},"fields":[{"defKey":"REVISION","defName":"乐观锁","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"8CA0D817-A03A-415B-85C1-A98B939EF6D6","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"id","defName":"id","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"847367B6-5E66-472F-B331-5D89AAB90747","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"logical_id","defName":"逻辑id","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"57F9CA57-E044-4C55-91DE-C0DA3536E3C4","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":2,"defKey":"mail_message_id","defName":"邮件消息Id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"1A7518A9-CF61-4927-868A-9DD9E45A6DEC","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":3,"defKey":"mail_title","defName":"邮件标题","comment":"","domain":"","type":"VARCHAR","len":500,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(512)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"0735903E-DBB2-45FF-A5E3-BBA2D597929C","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":4,"defKey":"mail_body","defName":"邮件内容","comment":"","domain":"","type":"TEXT","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"TEXT","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"CD29B3D7-FB20-4183-A67C-F7218A8C5511","baseType":"21FC5871-A333-438B-907B-C3008C6090FE"},{"rowNo":5,"defKey":"mail_configuer_id","defName":"邮件发送信息配置id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"44717482-8F6E-46B6-9B63-E6B2CD4D2966","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"receiver_email","defName":"收件邮箱","comment":"支持多个邮件一起发送，不同的接受邮件地址间通过“,”连接起来","type":"TEXT","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"C0B25BD5-FBAE-441A-AD70-A620DA79B8D3","baseType":"21FC5871-A333-438B-907B-C3008C6090FE"},{"defKey":"receiver_cc_email","defName":"抄送邮箱","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"B5983847-59B7-4C31-A06D-AE957B1AB784","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"0477C428-38B4-4564-B702-20454812B02F","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":7,"defKey":"send_time","defName":"发送时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"28E6B54A-F4B1-4B41-9975-B0014CF4612E","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"rowNo":8,"defKey":"send_state","defName":"发送结果状态","comment":"1：发送成功,2：发送失败,默认为1","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"CB855971-4628-452D-B995-C7525C41D12A","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":9,"defKey":"send_result","defName":"发送结果","comment":"","domain":"","type":"VARCHAR","len":5000,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(5000)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"18EF6F73-A074-4BA3-8D85-344A0397AD28","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"created_by_id","defName":"创建人Id","comment":"","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"02F4E4C4-6192-4033-ABA4-4499601C1852","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"created_by_name","defName":"创建人姓名","comment":"","type":"VARCHAR","len":128,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"BB58C7B9-1F1E-4191-85C2-EEF90CAE57F4","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"created_time","defName":"创建时间","comment":"","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"2E1F3C4C-695A-4325-AA2A-1A67910C7409","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"defKey":"updated_by_id","defName":"更新人Id","comment":"","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"50B4424D-ED8A-46D3-AB09-F964396F33B5","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"updated_by_name","defName":"更新人姓名","comment":"","type":"VARCHAR","len":128,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"DA95CF01-0050-4BD0-B80A-0C460B6CF71C","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"updated_time","defName":"更新时间","comment":"","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"F9978587-B5E2-4325-8D34-90385475AB01","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"}],"indexes":[{"defKey":"PRIMARY","unique":true,"defName":null,"comment":"","fields":[{"ascOrDesc":"A","id":"C8CC23FC-1D9F-449B-95F2-BB2A48F73AEB","fieldDefKey":"4B6C0462-9BC2-4622-ACDC-9AA178E9D9CC"}],"id":"AF60B2B6-A694-461F-9DFB-40E4339AB0BF"}],"headers":[{"freeze":true,"refKey":"hideInGraph","hideInGraph":true},{"freeze":false,"refKey":"defKey","hideInGraph":false},{"freeze":false,"refKey":"defName","hideInGraph":false},{"freeze":false,"refKey":"primaryKey","hideInGraph":false},{"freeze":false,"refKey":"notNull","hideInGraph":true},{"freeze":false,"refKey":"autoIncrement","hideInGraph":true},{"freeze":false,"refKey":"domain","hideInGraph":true},{"freeze":false,"refKey":"type","hideInGraph":false},{"freeze":false,"refKey":"len","hideInGraph":false},{"freeze":false,"refKey":"scale","hideInGraph":false},{"freeze":false,"refKey":"comment","hideInGraph":true},{"freeze":false,"refKey":"refDict","hideInGraph":true},{"freeze":false,"refKey":"defaultValue","hideInGraph":true},{"freeze":false,"refKey":"isStandard","hideInGraph":false},{"freeze":false,"refKey":"uiHint","hideInGraph":true},{"refKey":"extProps","hideInGraph":true,"freeze":false}],"correlations":[],"type":"P","sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{}},{"id":"6CC9C8F4-A819-4173-9C28-64188774EEF0","defKey":"mail_template","defName":"邮件模板表","comment":"","properties":{},"fields":[{"defKey":"REVISION","defName":"乐观锁","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"025A3A15-71C3-49D4-8BCB-12D6EE8364B0","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"id","defName":"id","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"B02CA824-1079-4477-8948-BCFD6122AA3A","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"logical_id","defName":"逻辑id","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"30CC096F-AD9C-43FD-BBD6-ED6168A8BA76","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":2,"defKey":"temp_name","defName":"模板名称","comment":"","domain":"","type":"VARCHAR","len":64,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(64)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"63CC8EBC-5268-47B9-BF8C-064A46454A3B","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":3,"defKey":"temp_body","defName":"模板内容","comment":"邮件内容模板通过\"{key}\"来进行模板参数占位","domain":"","type":"TEXT","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"TEXT","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"277F03A4-801E-4122-9BBF-6F7853747478","baseType":"21FC5871-A333-438B-907B-C3008C6090FE"},{"rowNo":4,"defKey":"temp_title","defName":"模板邮件标题","comment":"邮件标题模板通过\"{key}\"来进行模板参数占位","domain":"","type":"VARCHAR","len":1024,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(1024)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"C4BC0D3F-AD68-4C07-9056-14E12952AF8D","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":6,"defKey":"state","defName":"状态","comment":"1：启用\r\n2：禁用\r\n默认为1","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"1","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"4CE3CF54-6864-4633-98FA-AC496CB03539","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":7,"defKey":"created_by_id","defName":"创建人Id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"D4229052-606D-4E56-BB96-6BC4ACCD6AE4","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":8,"defKey":"created_by_name","defName":"创建人姓名","comment":"","domain":"","type":"VARCHAR","len":128,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(128)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"DDD3B992-4F7F-457B-A071-2EE2EB5942B2","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":9,"defKey":"created_time","defName":"创建时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"5152628A-A9AD-43C6-84F8-642E65633740","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"rowNo":10,"defKey":"updated_by_id","defName":"更新人Id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"E460C66B-38F7-48B8-B5A1-BE21F09A7687","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":11,"defKey":"updated_by_name","defName":"更新人姓名","comment":"","domain":"","type":"VARCHAR","len":128,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(128)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"71D00731-6A84-4D2A-B634-0C1697B9CB4A","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":12,"defKey":"updated_time","defName":"更新时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"0A999044-0BD7-41DC-A1A0-67AE3FE0388D","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"}],"indexes":[{"defKey":"PRIMARY","unique":true,"defName":null,"comment":"","fields":[{"ascOrDesc":"A","id":"BF4E6F19-A032-4475-B579-199DAC7B364D","fieldDefKey":"4C58E395-F3BB-40B1-B3E1-26FC42B03A02"}],"id":"3E497931-7C5D-4FCA-AAEE-3062DD424C93"}],"headers":[{"freeze":true,"refKey":"hideInGraph","hideInGraph":true},{"freeze":false,"refKey":"defKey","hideInGraph":false},{"freeze":false,"refKey":"defName","hideInGraph":false},{"freeze":false,"refKey":"primaryKey","hideInGraph":false},{"freeze":false,"refKey":"notNull","hideInGraph":true},{"freeze":false,"refKey":"autoIncrement","hideInGraph":true},{"freeze":false,"refKey":"domain","hideInGraph":true},{"freeze":false,"refKey":"type","hideInGraph":false},{"freeze":false,"refKey":"len","hideInGraph":false},{"freeze":false,"refKey":"scale","hideInGraph":false},{"freeze":false,"refKey":"comment","hideInGraph":true},{"freeze":false,"refKey":"refDict","hideInGraph":true},{"freeze":false,"refKey":"defaultValue","hideInGraph":true},{"freeze":false,"refKey":"isStandard","hideInGraph":false},{"freeze":false,"refKey":"uiHint","hideInGraph":true},{"refKey":"extProps","hideInGraph":true,"freeze":false}],"correlations":[],"type":"P","sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{}},{"id":"DD0E136B-7D3B-42E0-B40C-7D90E98407D1","defKey":"sms_message","defName":"短息消息表","comment":"","properties":{},"fields":[{"defKey":"REVISION","defName":"乐观锁","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"6F10D9F9-50A0-4C07-AC9D-93B9A0CE8DFB","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"id","defName":"id","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"1A9A9AA0-2D4E-43E2-B657-E135F1755A61","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"logical_id","defName":"逻辑id","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"8D826F79-2854-497D-BAE0-B2265FB1590E","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":3,"defKey":"channel_code","defName":"短息渠道编号","comment":"1：阿里云","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"1","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"√","autoIncrementName":"","refDict":"","id":"189F9ABE-AB3D-4C58-AD30-01BF88DEB26F","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":4,"defKey":"channel_name","defName":"短息渠道名称","comment":"1：阿里云","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"'阿里云'","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"√","autoIncrementName":"","refDict":"","id":"54E89433-31C8-4E81-BBB5-3547888CFA5A","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":5,"defKey":"sign_name","defName":"短息签名名称","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"B5EE899E-937A-4C6F-9A6F-E36E7D65D915","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":6,"defKey":"template_code","defName":"短息模板id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"0DA38680-DB4C-4DBD-B5C1-076F9A6E6ABC","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":7,"defKey":"template_param","defName":"短息模板变量值","comment":"短信平台模板参数json字符串","domain":"","type":"VARCHAR","len":512,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(512)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"DFCDEFAB-8485-40B1-AF66-6701D03EEEBB","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":8,"defKey":"content","defName":"短息内容","comment":"","domain":"","type":"VARCHAR","len":512,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(512)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"B291D5A1-0A3B-4FB8-9C4E-563D6620F001","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":9,"defKey":"send_type","defName":"发送方式","comment":"1：单发\r\n2：群发","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"1","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"√","autoIncrementName":"","refDict":"","id":"BCCFBD99-CBF5-4527-9727-B5F501F64162","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":10,"defKey":"phone_numbers","defName":"接收手机号码","comment":"不同的手机号码直接通过,连接","domain":"","type":"VARCHAR","len":3072,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(3072)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"511BC6E8-F7FE-4BEC-BF29-A85FDEEB1827","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":11,"defKey":"send_state","defName":"发送状态","comment":"1：待发送\r\n2：已发送\r\n3：发送失败","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"1","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"√","autoIncrementName":"","refDict":"","id":"CF5A9276-8F34-459B-8DCA-894F2A379CFC","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":12,"defKey":"submit_time","defName":"提交时间","comment":"我方提交短信平台时间","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"2587BF44-7585-4A0C-99E6-17AB9C5BC496","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"rowNo":13,"defKey":"biz_id","defName":"发送回执ID","comment":"","domain":"","type":"VARCHAR","len":64,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(64)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"928635B5-EE68-459A-83FB-07ECB3C068E5","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":14,"defKey":"request_id","defName":"请求id","comment":"","domain":"","type":"VARCHAR","len":64,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(64)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"76D829E9-11B3-4BFF-A3C0-C8CBFB505EE6","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":16,"defKey":"send_remark","defName":"发送结果备注","comment":"","domain":"","type":"VARCHAR","len":512,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(512)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"CFA80D84-6340-44CB-96CB-061DEABB19A1","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":17,"defKey":"created_by_id","defName":"创建人Id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"9BEFDCBE-A63A-4919-955F-E6AB5F09383F","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":18,"defKey":"created_by_name","defName":"创建人姓名","comment":"","domain":"","type":"VARCHAR","len":128,"scale":"","primaryKey":true,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(128)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"FB0DA231-C7BD-41E4-9521-52AB0DD55566","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":19,"defKey":"created_time","defName":"创建时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"819FC4DB-952B-4840-B5A0-FD9D4EB795A3","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"rowNo":20,"defKey":"updated_by_id","defName":"更新人Id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"FD56D345-B882-4F80-986F-EA7319EF380F","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":21,"defKey":"updated_by_name","defName":"更新人姓名","comment":"","domain":"","type":"VARCHAR","len":128,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(128)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"D9C7433A-733C-4511-9213-E33DE28E7CB7","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":22,"defKey":"updated_time","defName":"更新时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"0A7ED712-AE33-46B6-960B-1CAA887A22AC","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"}],"indexes":[{"defKey":"PRIMARY","unique":true,"defName":null,"comment":"","fields":[{"ascOrDesc":"A","id":"01A6EDCA-D267-45E5-8DA9-CD037D3874A7","fieldDefKey":"FE7FB7F1-DB89-4A77-95F6-83FDF8532826"}],"id":"0DD8D5E7-34DE-407A-8168-3DCE7154A738"}],"headers":[{"freeze":true,"refKey":"hideInGraph","hideInGraph":true},{"freeze":false,"refKey":"defKey","hideInGraph":false},{"freeze":false,"refKey":"defName","hideInGraph":false},{"freeze":false,"refKey":"primaryKey","hideInGraph":false},{"freeze":false,"refKey":"notNull","hideInGraph":true},{"freeze":false,"refKey":"autoIncrement","hideInGraph":true},{"freeze":false,"refKey":"domain","hideInGraph":true},{"freeze":false,"refKey":"type","hideInGraph":false},{"freeze":false,"refKey":"len","hideInGraph":false},{"freeze":false,"refKey":"scale","hideInGraph":false},{"freeze":false,"refKey":"comment","hideInGraph":true},{"freeze":false,"refKey":"refDict","hideInGraph":true},{"freeze":false,"refKey":"defaultValue","hideInGraph":true},{"freeze":false,"refKey":"isStandard","hideInGraph":false},{"freeze":false,"refKey":"uiHint","hideInGraph":true},{"refKey":"extProps","hideInGraph":true,"freeze":false}],"correlations":[],"type":"P","sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{}},{"id":"86BCE6AD-761B-46B2-A039-306460118E40","defKey":"sms_message_details","defName":"短息消息详情表","comment":"","properties":{},"fields":[{"defKey":"REVISION","defName":"乐观锁","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"19733B3C-DBC4-4FA0-8BD8-AFC3866AD405","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"id","defName":"id","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"29248EBE-5D9C-4A00-8D0C-EDE6910B2919","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"logical_id","defName":"逻辑id","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"2034B366-E5CF-45CF-AA2A-34C87BDB9533","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":3,"defKey":"sms_message_id","defName":"短信消息主id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"E53E8336-1932-4F0E-9076-4D39DA43BEE6","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":4,"defKey":"channel_code","defName":"短息渠道编号","comment":"1：阿里云","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"1","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"√","autoIncrementName":"","refDict":"","id":"6C462102-1B5E-43FE-8AFD-84AD5E24B618","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":5,"defKey":"channel_name","defName":"短息渠道名称","comment":"1：阿里云","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"'阿里云'","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"260E1971-6716-4F06-914D-34551BF288B3","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":6,"defKey":"content","defName":"短息内容","comment":"","domain":"","type":"VARCHAR","len":512,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(512)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"C42825D0-DF09-4ECA-A71B-CC056DBED898","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":7,"defKey":"phone_number","defName":"接收手机号码","comment":"不同的手机号码直接通过,连接","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"8AE5F4E4-A521-4438-A81F-2636B844223B","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":8,"defKey":"has_send_num","defName":"已发送次数","comment":"","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"0","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"√","autoIncrementName":"","refDict":"","id":"0C265852-7E7E-48EC-B641-60629A5E661C","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":9,"defKey":"send_state","defName":"发送状态","comment":"1：发送锁定（代表正在发送）2：已发送 （代表已经将短信发送到运营商）3：发送成功（运营商返回成功）4：发送失败（运营商返回失败）","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"1","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"√","autoIncrementName":"","refDict":"","id":"9DDA6953-182D-4C37-88E6-8BB3A04BC3FB","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":10,"defKey":"operator_state_code","defName":"运营商状态编码","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"3C044B55-16E2-4C1A-B72B-59A9FEEFAAE5","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":11,"defKey":"lock_time","defName":"锁定时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"3FF6938B-BCDA-46A6-A8E6-51DBBCB40B87","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"rowNo":12,"defKey":"submit_time","defName":"提交时间","comment":"我方提交短信平台时间","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"C5BACB16-7B4C-4393-BDF5-E48F543DC581","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"rowNo":14,"defKey":"receive_time","defName":"接收时间","comment":"用户查看时间","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"B3023088-BC0A-4623-96A6-1E5193C58494","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"rowNo":15,"defKey":"last_send_time","defName":"上一次发送时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"A2FA10BF-9CA7-4C8E-A858-19F993FE6B0C","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"rowNo":16,"defKey":"biz_id","defName":"发送回执ID","comment":"","domain":"","type":"VARCHAR","len":64,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(64)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"BFA31B0E-651B-4DCA-8D87-7EAD2E362D7D","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":17,"defKey":"request_id","defName":"请求id","comment":"","domain":"","type":"VARCHAR","len":64,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(64)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"277BAE86-85C0-468E-B82D-0BC151E7582A","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":18,"defKey":"query_lock_state","defName":"查询锁定状态","comment":"1：锁定\r\n2：未锁定","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"2","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"√","autoIncrementName":"","refDict":"","id":"DFCB1721-E272-4FDF-B326-E538FF105223","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":19,"defKey":"query_lock_time","defName":"查询锁定时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"33727087-35C5-4656-8654-CC49C48D0B0E","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"rowNo":20,"defKey":"created_by_id","defName":"创建人Id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"B6EC912D-CAA2-46BB-8A35-D58CF647D74C","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":21,"defKey":"created_by_name","defName":"创建人姓名","comment":"","domain":"","type":"VARCHAR","len":128,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(128)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"9B3EDE20-5637-4DBC-BAF7-A8057B860764","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":22,"defKey":"created_time","defName":"创建时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"BB5003BA-01D3-412D-8A8B-385DF6D5B8CB","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"rowNo":23,"defKey":"updated_by_id","defName":"更新人Id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"D4BF6EC1-0D40-4FD3-BB60-ED56477E8A01","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":24,"defKey":"updated_by_name","defName":"更新人姓名","comment":"","domain":"","type":"VARCHAR","len":128,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(128)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"BEC75ED3-2289-4D1D-AD7E-C62F1409619C","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":25,"defKey":"updated_time","defName":"更新时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"CA0EFFF7-66AE-440A-A728-86C8B613F83C","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"}],"indexes":[{"defKey":"PRIMARY","unique":true,"defName":null,"comment":"","fields":[{"ascOrDesc":"A","id":"0E175568-B342-46A2-8380-FD1E83A84C0F","fieldDefKey":"9539CC0E-7ECD-465C-AA73-7BD8D559479E"}],"id":"05145ACE-272A-4C5D-B51D-F563BEA29763"}],"headers":[{"freeze":true,"refKey":"hideInGraph","hideInGraph":true},{"freeze":false,"refKey":"defKey","hideInGraph":false},{"freeze":false,"refKey":"defName","hideInGraph":false},{"freeze":false,"refKey":"primaryKey","hideInGraph":false},{"freeze":false,"refKey":"notNull","hideInGraph":true},{"freeze":false,"refKey":"autoIncrement","hideInGraph":true},{"freeze":false,"refKey":"domain","hideInGraph":true},{"freeze":false,"refKey":"type","hideInGraph":false},{"freeze":false,"refKey":"len","hideInGraph":false},{"freeze":false,"refKey":"scale","hideInGraph":false},{"freeze":false,"refKey":"comment","hideInGraph":true},{"freeze":false,"refKey":"refDict","hideInGraph":true},{"freeze":false,"refKey":"defaultValue","hideInGraph":true},{"freeze":false,"refKey":"isStandard","hideInGraph":false},{"freeze":false,"refKey":"uiHint","hideInGraph":true},{"refKey":"extProps","hideInGraph":true,"freeze":false}],"correlations":[],"type":"P","sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{}},{"id":"22B0062D-3B90-4237-BABB-39101C44D1CE","defKey":"sms_configure","defName":"短信配置表","comment":"主要存储短信发送方账号信息","properties":{},"fields":[{"defKey":"REVISION","defName":"乐观锁","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"DCEAD49A-D5FC-44C6-8863-79FB2934A428","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"id","defName":"id","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"E6DA8271-FF1F-414D-8F71-FF0D9B4F9BE4","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"logical_id","defName":"逻辑id","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"077C66FF-227C-4607-90C4-584B51B7A7B8","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"channel_code","defName":"渠道编号","comment":"1、阿里云\n2、上海大汉三通数据通信","type":"INT","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"1","hideInGraph":false,"refDict":"","domain":"","id":"79FDC44C-5AF0-4A4A-AA23-D825975269AB","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"channel_name","defName":"渠道名称","comment":"","type":"VARCHAR","len":30,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","domain":"","id":"94444F70-5E3A-4FE3-89F5-62858E85DF45","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":2,"defKey":"sms_service","defName":"服务器地址","comment":"","domain":"","type":"VARCHAR","len":64,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(64)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"1A146E83-47C6-47B5-8D06-519B98B0E0BB","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":3,"defKey":"sms_account","defName":"短信发送账号","comment":"","domain":"","type":"VARCHAR","len":30,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(64)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"B59CED7C-76FB-4D73-8815-0C197C26C3AB","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":4,"defKey":"sms_pwd","defName":"短信发送密码","comment":"","domain":"","type":"VARCHAR","len":50,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(64)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"FAE00DBD-6BB6-4A01-840B-BCE8234BB856","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"template_code","defName":"模板编码","comment":"","type":"VARCHAR","len":30,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","domain":"","id":"44D78596-002B-4E57-8271-BED5F2209939","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"sign_name","defName":"签名名称","comment":"","type":"VARCHAR","len":20,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","domain":"","id":"E5007E51-0F76-4CEE-91EA-77459DED9206","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"is_current_channel","defName":"是否为当前渠道","comment":"1：当前渠道，","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"0","hideInGraph":false,"refDict":"","domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","id":"2AB29FB9-1131-4EFB-941E-9F89014E407F","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":5,"defKey":"state","defName":"状态","comment":"1：启用\r\n2：禁用\r\n默认为1","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"1","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"488B8E51-D791-4E3E-B70D-15B28D773551","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":6,"defKey":"created_by_id","defName":"创建人Id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"8AC42377-2CEA-4B1F-B02C-CB1DC84F1ABF","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":7,"defKey":"created_by_name","defName":"创建人姓名","comment":"","domain":"","type":"VARCHAR","len":128,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(128)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"AE89822E-BAEA-4215-929E-907FBD3ADD2D","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":8,"defKey":"created_time","defName":"创建时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"DCBBF9FD-106D-4359-B581-3D1504FA98FB","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"rowNo":9,"defKey":"updated_by_id","defName":"更新人Id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"19F60AD5-7938-496C-A21F-D9DEC359CFD0","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":10,"defKey":"updated_by_name","defName":"更新人姓名","comment":"","domain":"","type":"VARCHAR","len":128,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(128)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"294F435E-CB42-4013-85F5-1E805CBCCE6A","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":11,"defKey":"updated_time","defName":"更新时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"4CF039FB-8EBE-4CE0-82DC-D97151130C49","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"}],"indexes":[{"defKey":"PRIMARY","unique":true,"defName":null,"comment":"","fields":[{"ascOrDesc":"A","id":"71245689-7A88-4ECD-A208-51A292DB563C","fieldDefKey":"35DB96DB-4AE0-4DE4-85E7-20E35271E04C"}],"id":"C4249153-E558-4EF5-9B17-F46B13A6B250"}],"headers":[{"freeze":true,"refKey":"hideInGraph","hideInGraph":true,"code":"relationNoShow","value":"关系图","newCode":"hideInGraph","com":"Icon","relationNoShow":true},{"freeze":false,"refKey":"defKey","hideInGraph":false,"code":"name","value":"字段代码","newCode":"defKey","com":"Input","relationNoShow":false},{"freeze":false,"refKey":"defName","hideInGraph":false,"code":"chnname","value":"显示名称","newCode":"defName","com":"Input","relationNoShow":false},{"freeze":false,"refKey":"primaryKey","hideInGraph":false,"code":"pk","value":"主键","newCode":"primaryKey","com":"Checkbox","relationNoShow":false},{"freeze":false,"refKey":"notNull","hideInGraph":true,"code":"notNull","value":"不为空","newCode":"notNull","com":"Checkbox","relationNoShow":true},{"freeze":false,"refKey":"autoIncrement","hideInGraph":true,"code":"autoIncrement","value":"自增","newCode":"autoIncrement","com":"Checkbox","relationNoShow":true},{"freeze":false,"refKey":"domain","hideInGraph":true,"code":"type","value":"数据域","newCode":"domain","com":"Select","relationNoShow":true},{"freeze":false,"refKey":"type","hideInGraph":false,"code":"dataType","value":"数据类型","newCode":"type","com":"Text","relationNoShow":false},{"freeze":false,"refKey":"len","hideInGraph":false,"code":"len","value":"长度","newCode":"len","com":"Input","relationNoShow":false},{"freeze":false,"refKey":"scale","hideInGraph":false,"code":"scale","value":"小数位数","newCode":"scale","com":"Input","relationNoShow":false},{"freeze":false,"refKey":"comment","hideInGraph":true,"code":"remark","value":"说明","newCode":"comment","com":"Input","relationNoShow":true},{"freeze":false,"refKey":"refDict","hideInGraph":true,"code":"refDict","value":"数据字典","newCode":"refDict","com":"SearchSelect","relationNoShow":true},{"freeze":false,"refKey":"defaultValue","hideInGraph":true,"code":"defaultValue","value":"默认值","newCode":"defaultValue","com":"Input","relationNoShow":true},{"freeze":false,"refKey":"isStandard","hideInGraph":false,"code":"isStandard","value":"标准字段","newCode":"isStandard","com":"label","relationNoShow":false},{"freeze":false,"refKey":"uiHint","hideInGraph":true,"code":"uiHint","value":"UI建议","newCode":"uiHint","com":"Select","relationNoShow":true},{"refKey":"extProps","hideInGraph":true,"freeze":false}],"correlations":[],"type":"P","sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{}},{"id":"5D74C89A-AFAE-4182-AA68-2F47C70D5265","defKey":"sms_template","defName":"短信模板表","comment":"短信模板表","properties":{},"fields":[{"defKey":"REVISION","defName":"乐观锁","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"30E690D5-96B5-40C9-9FAC-B94999C5CA01","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"id","defName":"id","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"CCAFB58A-684F-44CB-B0CA-E96F08DD36CF","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"logical_id","defName":"逻辑id","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"713BC355-D186-420E-A2C8-776F0F1C2611","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"temp_type","defName":"模板类型","comment":"1、取件验证码2、找回密码验证码3、开票异常提醒短信4、发票领取短信","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"1","hideInGraph":false,"refDict":"","domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","id":"14275C55-D246-48E7-AC80-738FB207B4EF","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"temp_code","defName":"模板编码","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","domain":"B5983847-59B7-4C31-A06D-AE957B1AB784","id":"F6905CE4-39D0-4E44-9395-C6C796138EE3","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":2,"defKey":"temp_name","defName":"模板名称","comment":"","domain":"","type":"VARCHAR","len":64,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(64)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"63CC8EBC-5268-47B9-BF8C-064A46454A3B","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":3,"defKey":"temp_body","defName":"模板内容","comment":"邮件内容模板通过\"{key}\"来进行模板参数占位","domain":"","type":"TEXT","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"TEXT","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"277F03A4-801E-4122-9BBF-6F7853747478","baseType":"21FC5871-A333-438B-907B-C3008C6090FE"},{"rowNo":6,"defKey":"state","defName":"状态","comment":"1：启用\r\n2：禁用\r\n默认为1","domain":"","type":"INT","len":11,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"1","hideInGraph":false,"typeFullName":"INT(11)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"4CE3CF54-6864-4633-98FA-AC496CB03539","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"rowNo":7,"defKey":"created_by_id","defName":"创建人Id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"D4229052-606D-4E56-BB96-6BC4ACCD6AE4","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":8,"defKey":"created_by_name","defName":"创建人姓名","comment":"","domain":"","type":"VARCHAR","len":128,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(128)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"DDD3B992-4F7F-457B-A071-2EE2EB5942B2","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":9,"defKey":"created_time","defName":"创建时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"5152628A-A9AD-43C6-84F8-642E65633740","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"rowNo":10,"defKey":"updated_by_id","defName":"更新人Id","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"VARCHAR","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(32)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"E460C66B-38F7-48B8-B5A1-BE21F09A7687","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":11,"defKey":"updated_by_name","defName":"更新人姓名","comment":"","domain":"","type":"VARCHAR","len":128,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"VARCHAR(128)","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"71D00731-6A84-4D2A-B634-0C1697B9CB4A","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"rowNo":12,"defKey":"updated_time","defName":"更新时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"DATETIME","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"typeFullName":"DATETIME","primaryKeyName":"","notNullName":"","autoIncrementName":"","refDict":"","id":"0A999044-0BD7-41DC-A1A0-67AE3FE0388D","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"}],"indexes":[{"defKey":"PRIMARY","unique":true,"defName":null,"comment":"","fields":[{"ascOrDesc":"A","id":"BF4E6F19-A032-4475-B579-199DAC7B364D","fieldDefKey":"4C58E395-F3BB-40B1-B3E1-26FC42B03A02"}],"id":"3E497931-7C5D-4FCA-AAEE-3062DD424C93"}],"headers":[{"freeze":true,"refKey":"hideInGraph","hideInGraph":true},{"freeze":false,"refKey":"defKey","hideInGraph":false},{"freeze":false,"refKey":"defName","hideInGraph":false},{"freeze":false,"refKey":"primaryKey","hideInGraph":false},{"freeze":false,"refKey":"notNull","hideInGraph":true},{"freeze":false,"refKey":"autoIncrement","hideInGraph":true},{"freeze":false,"refKey":"domain","hideInGraph":true},{"freeze":false,"refKey":"type","hideInGraph":false},{"freeze":false,"refKey":"len","hideInGraph":false},{"freeze":false,"refKey":"scale","hideInGraph":false},{"freeze":false,"refKey":"comment","hideInGraph":true},{"freeze":false,"refKey":"refDict","hideInGraph":true},{"freeze":false,"refKey":"defaultValue","hideInGraph":true},{"freeze":false,"refKey":"isStandard","hideInGraph":false},{"freeze":false,"refKey":"uiHint","hideInGraph":true},{"refKey":"extProps","hideInGraph":true,"freeze":false}],"correlations":[],"type":"P","sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{}},{"id":"41EBE4F1-7FE0-4AA5-998A-DAB47AE61F4B","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"message","defName":"消息","comment":"","properties":{},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":false,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"REVISION","defName":"乐观锁","comment":"","domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","uiHint":"","id":"FC733765-D40C-4FA3-B868-F15C71CF9BDD","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"id","defName":"id","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","refDict":"","uiHint":"","id":"49D1A398-B184-4632-AEB9-A4C30082A05D","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"logical_id","defName":"逻辑id","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","id":"1CFD07F0-72C2-47D0-AA6A-57311BBFC896"},{"defKey":"title","defName":"主题","comment":"","type":"VARCHAR","len":300,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"","id":"393C1C9A-6C0E-44FB-AD48-55A6DDB79EDA"},{"defKey":"content","defName":"内容","comment":"","type":"VARCHAR","len":1000,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"","id":"B487F6FA-A132-4359-AB08-4BC527F3CCCE"},{"defKey":"dynamic_parameter","defName":"动态参数","comment":"动态参数，用于替换消息模板里面的内容","type":"VARCHAR","len":1000,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"","id":"284BFC78-908C-4EC1-BFDC-B75556E21415"},{"defKey":"link_url","defName":"链接地址","comment":"","type":"VARCHAR","len":300,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"","id":"DAF7AE6B-79FF-4D99-BF8C-13AF395D9CB8"},{"defKey":"link_text","defName":"链接文本","comment":"","type":"VARCHAR","len":500,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"","id":"E4CD63B1-891B-4893-B456-8543B3BC0907"},{"defKey":"business_type_key","defName":"业务类型key","comment":"","type":"VARCHAR","len":300,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"","id":"D636B0AD-6C2C-4B4C-8E52-E475746410D0"},{"defKey":"business_type_value","defName":"业务类型value","comment":"","type":"VARCHAR","len":300,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"","id":"CA23C078-2E29-47A8-B8C3-E5741AE0EFFD"},{"defKey":"sendchannel","defName":"消息发送渠道","comment":"1:邮件，2:短信，3:企业微信，4:钉钉...... 多个用,隔开","type":"VARCHAR","len":300,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"","id":"72AFB306-984C-4A9C-9D0C-F80B183470DA"},{"defKey":"created_by_id","defName":"创建人ID","comment":"","domain":"892E5A72-9E10-42EF-B09A-FC170764011C","type":"","len":32,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","uiHint":"","id":"61C3FAF5-1EDE-4C53-96FE-F11C8343AB72","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"created_by_name","defName":"创建人姓名","comment":"","type":"VARCHAR","len":50,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"","id":"3DA2C6C7-B677-4854-86DE-EBBA0DF16747"},{"defKey":"created_time","defName":"创建时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","uiHint":"","id":"1AA27A4E-7AC9-447E-8FCD-D679EE6F99BF","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"defKey":"updated_by_id","defName":"更新人ID","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","id":"CD471C84-C2DE-4485-97DB-3A2AB2BB580F"},{"defKey":"updated_by_name","defName":"更新人姓名","comment":"","domain":"","type":"VARCHAR","len":50,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","uiHint":"","id":"DA487FCA-E0C4-43E3-ADEA-1D2AA6910633","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"updated_time","defName":"更新时间","comment":"","domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","uiHint":"","id":"8232C523-0A84-4C33-BD3D-428EDCEE6BCF","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"}],"correlations":[],"indexes":[],"type":"P"},{"id":"19FEFC23-8465-40FD-B156-6622A5513897","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"message_receiver","defName":"消息接收人","comment":"","properties":{},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":false,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"REVISION","defName":"乐观锁","comment":"","domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","uiHint":"","id":"C9413505-C9DA-40F7-93B5-A27AA32832C9","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568"},{"defKey":"id","defName":"id","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"C9392B06-615C-4FF6-8769-70FC5AA8D568","extProps":{},"domain":"88979A43-D267-4DE3-9EAA-1E9F22280346","id":"DB64C565-5496-4F6B-880D-83C5143D04C7"},{"defKey":"logical_id","defName":"逻辑id","comment":"","type":"","len":32,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","refDict":"","uiHint":"","id":"F4710CF3-6AE9-419A-A66E-10DC9FD33AA6","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"message_id","defName":"消息id","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","id":"7600C011-A9CA-4CA6-86FD-193124C935F5"},{"defKey":"receiver_userid","defName":"接收人用户id","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"B5983847-59B7-4C31-A06D-AE957B1AB784","id":"44E469D6-18CC-4B97-9B25-8A0C0C22A3FA"},{"defKey":"receiver_name","defName":"接收人姓名","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"B5983847-59B7-4C31-A06D-AE957B1AB784","id":"8BF5A38F-EBA5-4E5A-B925-A216FE6318B2"},{"defKey":"email","defName":"邮件","comment":"","type":"VARCHAR","len":1000,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"","id":"4F108A0A-1531-49ED-B9E8-8EE3044DA09E"},{"defKey":"cc_email","defName":"抄送邮件","comment":"","type":"VARCHAR","len":1000,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"","id":"B17B7C14-6929-4FAC-A9AD-A3E53A8ED3FE"},{"defKey":"phone","defName":"电话","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"B5983847-59B7-4C31-A06D-AE957B1AB784","id":"72D965A3-0EAC-421E-8137-1A490E797968"},{"defKey":"enterprise_wechat","defName":"企业微信","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"B5983847-59B7-4C31-A06D-AE957B1AB784","id":"67EB01D9-9366-493C-85F6-280A037818EC"},{"defKey":"dingtalk","defName":"钉钉","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"B5983847-59B7-4C31-A06D-AE957B1AB784","id":"D07B8D04-E8CE-4924-9F1A-86012C0CC1B2"},{"defKey":"other_receive_channel","defName":"其他消息接收渠道","comment":"消息的其他接收渠道，json字符串","type":"VARCHAR","len":1000,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","extProps":{},"domain":"","id":"12D601BB-05C2-4539-9FF3-4CF1C1620AEF"},{"defKey":"created_by_id","defName":"创建人ID","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"F7AA4397-9B2D-45AA-AB35-2F7474DB7C97","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"created_by_name","defName":"创建人姓名","comment":"","type":"VARCHAR","len":50,"scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"17C847A6-90C9-446C-8852-A5BF5094B6F8","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"created_time","defName":"创建时间","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"20F8CB3E-F588-4ADF-9205-705CD8FDF4F1","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"},{"defKey":"updated_by_id","defName":"更新人ID","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"892E5A72-9E10-42EF-B09A-FC170764011C","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"0A1C1E8E-E62F-4BBE-8861-AEA862DE2AD8","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"updated_by_name","defName":"更新人姓名","comment":"","type":"VARCHAR","len":50,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"A3EAA702-AE1C-4FA5-91AE-44F39729B218","baseType":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9"},{"defKey":"updated_time","defName":"更新时间","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"896DE163-0F9C-4C91-B3B0-F552434C1AD1","baseType":"C033B8D1-5229-4FA8-BDCB-7306708E3213"}],"correlations":[],"indexes":[],"type":"P"}],"views":[],"dicts":[],"viewGroups":[],"dataTypeMapping":{"referURL":"","mappings":[{"defKey":"string","defName":"字串","id":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","C6A38BE9-34DB-4AC5-AAC6-962488689529":"VARCHAR","9F4C1D4C-1678-473A-BC1D-886411B2198C":"VARCHAR2","0AC98C09-41E2-404D-A6D3-F4EE9B21557B":"VARCHAR","A36FE710-235F-4D99-8F34-1F9A3C387D0F":"VARCHAR","FD9EE40A-58D9-42BE-9900-AF2D8799528C":"VARCHAR","861B78E3-6D54-417D-B394-D9783A6FD275":"VARCHAR2","A0BF7552-C495-4320-B165-461A63C9EC74":"VARCHAR","8A991A2C-C36D-46E3-B606-B9A44061215F":"VARCHAR","E70ADE4E-8C81-4A5E-A1C3-F976F53DF010":"STRING","1E54AC57-502D-48B4-89D5-56E5A6D5328E":"String","B74117FD-05A9-4BD1-BD5A-D9D2E2AE9334":"string","44E3F694-7809-442C-AC6F-94D4449905D6":"TEXT"},{"defKey":"double","defName":"小数","id":"989F79ED-D98E-49A3-B184-EA67C3318058","C6A38BE9-34DB-4AC5-AAC6-962488689529":"DECIMAL","9F4C1D4C-1678-473A-BC1D-886411B2198C":"DECIMAL","0AC98C09-41E2-404D-A6D3-F4EE9B21557B":"DECIMAL","A36FE710-235F-4D99-8F34-1F9A3C387D0F":"NUMERIC","FD9EE40A-58D9-42BE-9900-AF2D8799528C":"DECIMAL","861B78E3-6D54-417D-B394-D9783A6FD275":"DECIMAL","A0BF7552-C495-4320-B165-461A63C9EC74":"NUMERIC","8A991A2C-C36D-46E3-B606-B9A44061215F":"NUMERIC","E70ADE4E-8C81-4A5E-A1C3-F976F53DF010":"DOUBLE","1E54AC57-502D-48B4-89D5-56E5A6D5328E":"Double","B74117FD-05A9-4BD1-BD5A-D9D2E2AE9334":"decimal","44E3F694-7809-442C-AC6F-94D4449905D6":"REAL"},{"defKey":"int","defName":"整数","id":"C9392B06-615C-4FF6-8769-70FC5AA8D568","C6A38BE9-34DB-4AC5-AAC6-962488689529":"INT","9F4C1D4C-1678-473A-BC1D-886411B2198C":"INT","0AC98C09-41E2-404D-A6D3-F4EE9B21557B":"INT","A36FE710-235F-4D99-8F34-1F9A3C387D0F":"INTEGER","FD9EE40A-58D9-42BE-9900-AF2D8799528C":"INT","861B78E3-6D54-417D-B394-D9783A6FD275":"INTEGER","A0BF7552-C495-4320-B165-461A63C9EC74":"INTEGER","8A991A2C-C36D-46E3-B606-B9A44061215F":"INT4","E70ADE4E-8C81-4A5E-A1C3-F976F53DF010":"INT","1E54AC57-502D-48B4-89D5-56E5A6D5328E":"Integer","B74117FD-05A9-4BD1-BD5A-D9D2E2AE9334":"int","44E3F694-7809-442C-AC6F-94D4449905D6":"INTEGER"},{"defKey":"date","defName":"日期","id":"C033B8D1-5229-4FA8-BDCB-7306708E3213","C6A38BE9-34DB-4AC5-AAC6-962488689529":"DATETIME","9F4C1D4C-1678-473A-BC1D-886411B2198C":"DATE","0AC98C09-41E2-404D-A6D3-F4EE9B21557B":"DATETIME","A36FE710-235F-4D99-8F34-1F9A3C387D0F":"DATE","FD9EE40A-58D9-42BE-9900-AF2D8799528C":"DATE","861B78E3-6D54-417D-B394-D9783A6FD275":"DATE","A0BF7552-C495-4320-B165-461A63C9EC74":"DATE","8A991A2C-C36D-46E3-B606-B9A44061215F":"DATE","E70ADE4E-8C81-4A5E-A1C3-F976F53DF010":"DATETIME","1E54AC57-502D-48B4-89D5-56E5A6D5328E":"Date","B74117FD-05A9-4BD1-BD5A-D9D2E2AE9334":"DateTime","44E3F694-7809-442C-AC6F-94D4449905D6":"NUMERIC"},{"defKey":"bytes","defName":"二进制","id":"65A4FEE2-3E8A-4C12-BC08-028B76BE68DB","C6A38BE9-34DB-4AC5-AAC6-962488689529":"BLOB","9F4C1D4C-1678-473A-BC1D-886411B2198C":"BLOB","0AC98C09-41E2-404D-A6D3-F4EE9B21557B":"VARBINARY","A36FE710-235F-4D99-8F34-1F9A3C387D0F":"BYTEA","FD9EE40A-58D9-42BE-9900-AF2D8799528C":"BLOB","861B78E3-6D54-417D-B394-D9783A6FD275":"BLOB","A0BF7552-C495-4320-B165-461A63C9EC74":"BYTEA","8A991A2C-C36D-46E3-B606-B9A44061215F":"BYTEA","E70ADE4E-8C81-4A5E-A1C3-F976F53DF010":"BINARY","1E54AC57-502D-48B4-89D5-56E5A6D5328E":"byte[]","B74117FD-05A9-4BD1-BD5A-D9D2E2AE9334":"byte[]","44E3F694-7809-442C-AC6F-94D4449905D6":"NONE"},{"defKey":"largeText","defName":"大文本","id":"21FC5871-A333-438B-907B-C3008C6090FE","C6A38BE9-34DB-4AC5-AAC6-962488689529":"TEXT","9F4C1D4C-1678-473A-BC1D-886411B2198C":"CLOB","0AC98C09-41E2-404D-A6D3-F4EE9B21557B":"TEXT","A36FE710-235F-4D99-8F34-1F9A3C387D0F":"TEXT","FD9EE40A-58D9-42BE-9900-AF2D8799528C":"CLOB","861B78E3-6D54-417D-B394-D9783A6FD275":"CLOB","A0BF7552-C495-4320-B165-461A63C9EC74":"TEXT","8A991A2C-C36D-46E3-B606-B9A44061215F":"TEXT","E70ADE4E-8C81-4A5E-A1C3-F976F53DF010":"STRING","1E54AC57-502D-48B4-89D5-56E5A6D5328E":"String","B74117FD-05A9-4BD1-BD5A-D9D2E2AE9334":"string","44E3F694-7809-442C-AC6F-94D4449905D6":"TEXT"}]},"domains":[{"defKey":"DefaultString","defName":"默认字串","applyFor":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","len":255,"scale":"","uiHint":"","id":"B5983847-59B7-4C31-A06D-AE957B1AB784"},{"defKey":"IdOrKey","defName":"主键标识","applyFor":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","len":32,"scale":"","uiHint":"","id":"892E5A72-9E10-42EF-B09A-FC170764011C"},{"defKey":"Name","defName":"名称","applyFor":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","len":90,"scale":"","uiHint":"","id":"529BB7BB-B786-4FAD-B340-CBC10940E592"},{"defKey":"Int","defName":"整数","applyFor":"C9392B06-615C-4FF6-8769-70FC5AA8D568","len":"","scale":"","uiHint":"","id":"88979A43-D267-4DE3-9EAA-1E9F22280346"},{"defKey":"Double","defName":"小数","applyFor":"989F79ED-D98E-49A3-B184-EA67C3318058","len":24,"scale":6,"uiHint":"","id":"BDED87FB-82F1-4B1C-B485-039D708F25E1"},{"defKey":"Money","defName":"金额","applyFor":"989F79ED-D98E-49A3-B184-EA67C3318058","len":24,"scale":6,"uiHint":"","id":"D9E74B31-6C55-4D33-8FEF-4AFD259C663B"},{"defKey":"DateTime","defName":"日期时间","applyFor":"C033B8D1-5229-4FA8-BDCB-7306708E3213","len":"","scale":"","uiHint":"","id":"FB9B5C96-F64D-45C1-84AB-4DCC4FF24F4E"},{"defKey":"YesNo","defName":"是否","applyFor":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","len":"1","scale":"","uiHint":"","id":"14060C46-15A1-4BEF-A326-856CFD8106C2"},{"defKey":"Dict","defName":"数据字典","applyFor":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","len":"32","scale":"","uiHint":"","id":"116231F0-2E7B-4B59-ACDC-215DD32834D1"},{"defKey":"DescText","defName":"描述文本","applyFor":"86B32EC1-BBAC-4363-A2C3-EC68DD7972D9","len":"900","scale":"","uiHint":"","id":"32A0619C-F069-4A9A-8586-150013DB7FD0"}],"dbConn":[{"defKey":"80821A7B-1C06-4D63-8366-5AF4A7B246A0","defName":"mseeage","type":"C6A38BE9-34DB-4AC5-AAC6-962488689529","properties":{"driver_class_name":"com.mysql.cj.jdbc.Driver","url":"jdbc:mysql://47.108.65.234:3306/message?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=UTC","password":"HS@123456!","username":"root"}}],"diagrams":[],"standardFields":[],"namingRules":[{"id":"63F1DC0E-6A76-4B75-B3DA-4B00657B4E1B","defName":"属性代码不能超过32","intro":"","controlIntensity":"S","applyObjectType":"L","applyFieldType":"field","programCode":"return (data.field.defName||\"\").length <= 32","enable":true},{"id":"668CBEE6-E0B7-4ACE-B72E-63942963B191","defName":"长度不能超过32位","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"entity","programCode":"return (data.entity.defName||\"\").length <= 32","enable":true},{"id":"11BD987F-82E7-418E-A752-FDD84F1582A2","defName":"长度不能超过32位","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"field","programCode":"return (data.field.defName||\"\").length <= 32","enable":true},{"id":"29D0A8D9-ABE2-451F-8A39-52FAB02E62B9","defName":"索引名-长度不超过32个字符","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"index","programCode":"return (data.index.defName||\"\").length <= 32","enable":true},{"id":"B425A96F-6A31-4DBD-8743-A00DE28FB50F","defName":"不能使用保留字","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"index","programCode":"let sysWords = \"action,add,aggregate,all,alter,after,and,as,asc,avg,avg_row_length,auto_increment,between,bigint,bit,binary,blob,bool,both,by,cascade,case,char,character,change,check,checksum,column,columns,comment,constraint,create,cross,current_date,current_time,current_timestamp,data,database,databases,date,datetime,day,day_hour,day_minute,day_second,dayofmonth,dayofweek,dayofyear,dec,decimal,default,delayed,delay_key_write,delete,desc,describe,distinct,distinctrow,double,drop,end,else,escape,escaped,enclosed,enum,explain,exists,fields,file,first,float,float4,float8,flush,foreign,from,for,full,function,global,grant,grants,group,having,heap,high_priority,hour,hour_minute,hour_second,hosts,identified,ignore,in,index,infile,inner,insert,insert_id,int,integer,interval,int1,int2,int3,int4,int8,into,if,is,isam,join,key,keys,kill,last_insert_id,leading,left,length,like,lines,limit,load,local,lock,logs,long,longblob,longtext,low_priority,max,max_rows,match,mediumblob,mediumtext,mediumint,middleint,min_rows,minute,minute_second,modify,month,monthname,myisam,natural,numeric,no,not,null,on,optimize,option,optionally,or,order,outer,outfile,pack_keys,partial,password,precision,primary,procedure,process,processlist,privileges,read,real,references,reload,regexp,rename,replace,restrict,returns,revoke,rlike,row,rows,second,select,set,show,shutdown,smallint,soname,sql_big_tables,sql_big_selects,sql_low_priority_updates,sql_log_off,sql_log_update,sql_select_limit,sql_small_result,sql_big_result,sql_warnings,straight_join,starting,status,string,table,tables,temporary,terminated,text,then,time,timestamp,tinyblob,tinytext,tinyint,trailing,to,type,use,using,unique,unlock,unsigned,update,usage,values,varchar,variables,varying,varbinary,with,write,when,where,year,year_month,zerofill\".split(\",\");\nreturn sysWords.indexOf(data.index.defKey.toLowerCase())<0;","enable":true},{"id":"EF9E44D0-691A-4352-A079-CFF300107531","defName":"索引名-全小写","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"index","programCode":"return !/[A-Z]+/.test(data.index.defKey);","enable":true},{"id":"972EB2FB-4428-429D-8B0A-F082A8C7A94D","defName":"名称不能为空","intro":"","controlIntensity":"F","applyObjectType":"L","applyFieldType":"entity","programCode":"return data.logicEntity.defName","enable":true},{"id":"EEAEB9C5-BB6C-4E92-949B-D27928690D85","defName":"名称长度不超过32","intro":"","controlIntensity":"S","applyObjectType":"L","applyFieldType":"entity","programCode":"return (data.logicEntity.defName||\"\").length <=32","enable":true},{"id":"24E3F7E5-730D-4378-B72D-195D6B940352","defName":"不能使用保留字","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"entity","programCode":"let sysWords = \"action,add,aggregate,all,alter,after,and,as,asc,avg,avg_row_length,auto_increment,between,bigint,bit,binary,blob,bool,both,by,cascade,case,char,character,change,check,checksum,column,columns,comment,constraint,create,cross,current_date,current_time,current_timestamp,data,database,databases,date,datetime,day,day_hour,day_minute,day_second,dayofmonth,dayofweek,dayofyear,dec,decimal,default,delayed,delay_key_write,delete,desc,describe,distinct,distinctrow,double,drop,end,else,escape,escaped,enclosed,enum,explain,exists,fields,file,first,float,float4,float8,flush,foreign,from,for,full,function,global,grant,grants,group,having,heap,high_priority,hour,hour_minute,hour_second,hosts,identified,ignore,in,index,infile,inner,insert,insert_id,int,integer,interval,int1,int2,int3,int4,int8,into,if,is,isam,join,key,keys,kill,last_insert_id,leading,left,length,like,lines,limit,load,local,lock,logs,long,longblob,longtext,low_priority,max,max_rows,match,mediumblob,mediumtext,mediumint,middleint,min_rows,minute,minute_second,modify,month,monthname,myisam,natural,numeric,no,not,null,on,optimize,option,optionally,or,order,outer,outfile,pack_keys,partial,password,precision,primary,procedure,process,processlist,privileges,read,real,references,reload,regexp,rename,replace,restrict,returns,revoke,rlike,row,rows,second,select,set,show,shutdown,smallint,soname,sql_big_tables,sql_big_selects,sql_low_priority_updates,sql_log_off,sql_log_update,sql_select_limit,sql_small_result,sql_big_result,sql_warnings,straight_join,starting,status,string,table,tables,temporary,terminated,text,then,time,timestamp,tinyblob,tinytext,tinyint,trailing,to,type,use,using,unique,unlock,unsigned,update,usage,values,varchar,variables,varying,varbinary,with,write,when,where,year,year_month,zerofill\".split(\",\");\nreturn sysWords.indexOf(data.entity.defKey.toLowerCase())<0;","enable":true},{"id":"039BF435-DC77-4DA4-81C7-7F8076BF22BB","defName":"表名-全小写","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"entity","programCode":"return !/[A-Z]+/.test(data.entity.defKey);","enable":true},{"id":"CBEB0E30-19C6-427D-A8BF-61FF10E27A0B","defName":"表名-不允许空格","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"entity","programCode":"return !/\\s+/.test(data.entity.defKey);","enable":true},{"id":"1168C7C2-8E8E-4FB7-B639-B3DE839C395A","defName":"表名-英文及下划线","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"entity","programCode":"return /^[a-zA-Z_][a-zA-Z0-9_]*$/.test(data.entity.defKey);","enable":true},{"id":"D373637C-D3A6-4621-B656-6841A5444A76","defName":"表必须有comment注释","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"entity","programCode":"return (data.entity.defName||\"\").length > 0 || (data.entity.comment||\"\").length > 0","enable":true},{"id":"2BAB122B-8811-40BB-89F3-CDC24B5862D3","defName":"主键命名为 id，类型为 int 或 bigint，且为自增","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"entity","programCode":"let fields = data.entity.fields;\nfor(let i=0;i<fields.length;i++){\n    let field = fields[i];\n    if(field.primaryKey){\n        return field.autoIncrement && (field.dbType.toUpperCase()==\"INT\"||field.dbType==\"BIGINT\");\n    }\n}\nreturn false;","enable":true},{"id":"0B2F0BD2-3B84-4AB1-BA29-9DE9620AF608","defName":"必须有数据的创建时间以及创建人字段","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"entity","programCode":"let count = 0;\nlet fields = data.entity.fields;\nfor(let i=0;i<fields.length;i++){\n    let field = fields[i];\n    if(\"created_time,updated_time\".indexOf(field.defKey.toLowerCase())>=0){\n        count ++;\n    }\n}\nreturn count==2;","enable":true},{"id":"BEC54F19-52D5-4882-BCE1-4439785F8001","defName":"不能使用保留字","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"field","programCode":"let sysWords = \"action,add,aggregate,all,alter,after,and,as,asc,avg,avg_row_length,auto_increment,between,bigint,bit,binary,blob,bool,both,by,cascade,case,char,character,change,check,checksum,column,columns,comment,constraint,create,cross,current_date,current_time,current_timestamp,data,database,databases,date,datetime,day,day_hour,day_minute,day_second,dayofmonth,dayofweek,dayofyear,dec,decimal,default,delayed,delay_key_write,delete,desc,describe,distinct,distinctrow,double,drop,end,else,escape,escaped,enclosed,enum,explain,exists,fields,file,first,float,float4,float8,flush,foreign,from,for,full,function,global,grant,grants,group,having,heap,high_priority,hour,hour_minute,hour_second,hosts,identified,ignore,in,index,infile,inner,insert,insert_id,int,integer,interval,int1,int2,int3,int4,int8,into,if,is,isam,join,key,keys,kill,last_insert_id,leading,left,length,like,lines,limit,load,local,lock,logs,long,longblob,longtext,low_priority,max,max_rows,match,mediumblob,mediumtext,mediumint,middleint,min_rows,minute,minute_second,modify,month,monthname,myisam,natural,numeric,no,not,null,on,optimize,option,optionally,or,order,outer,outfile,pack_keys,partial,password,precision,primary,procedure,process,processlist,privileges,read,real,references,reload,regexp,rename,replace,restrict,returns,revoke,rlike,row,rows,second,select,set,show,shutdown,smallint,soname,sql_big_tables,sql_big_selects,sql_low_priority_updates,sql_log_off,sql_log_update,sql_select_limit,sql_small_result,sql_big_result,sql_warnings,straight_join,starting,status,string,table,tables,temporary,terminated,text,then,time,timestamp,tinyblob,tinytext,tinyint,trailing,to,type,use,using,unique,unlock,unsigned,update,usage,values,varchar,variables,varying,varbinary,with,write,when,where,year,year_month,zerofill\".split(\",\");\nreturn sysWords.indexOf(data.field.defKey.toLowerCase())<0;","enable":true},{"id":"082E186D-7B02-4F1C-9ECE-378AB98C4845","defName":"字段-全小写","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"field","programCode":"return !/[A-Z]+/.test(data.field.defKey);","enable":true},{"id":"F3CE5C67-23B6-4E7B-BA91-D5F0BCBC9E6A","defName":"字段-不允许空格","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"field","programCode":"return !/\\s+/.test(data.field.defKey);","enable":true},{"id":"21AFEAC8-96D7-467F-8320-A33887FC0C5D","defName":"字段-英文及下划线","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"field","programCode":"return /^[a-zA-Z_][a-zA-Z0-9_]*$/.test(data.field.defKey);","enable":true},{"id":"2BBDE47B-6926-4E1A-AE57-D4F6E5399EE6","defName":"字段-必需有comment注释","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"field","programCode":"return (data.field.defName||\"\").length > 0 || (data.field.comment||\"\").length > 0","enable":true},{"id":"5E181E43-0D72-498F-8178-4C1CDBC89A16","defName":"字段-不能与表名相同","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"field","programCode":"return data.field.defKey != data.entity.defKey;","enable":true},{"id":"DE8F8598-5D53-4727-A837-7816C2AF99D9","defName":"外键-字段必须具有表名及其主键","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"field","programCode":"let relas = data.entity.correlations;\nfor(let i=0;i<relas.length;i++){\n    let rela = relas[i];\n    if(data.field.defKey==rela.myField&&rela.myRows==\"n\"){\n        if(rela.myField==(rela.refEntity+\"_\"+rela.refField)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n}\nreturn true;","enable":true},{"id":"D330BCC3-DBAB-4677-8C5A-A301003A5878","defName":"时间字段类型尽量选取 timestamp","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"field","programCode":"if(data.field.defName.lastIndexOf(\"日期\")>=0 || data.field.defName.lastIndexOf(\"时间\")>=0 ){\n    if(data.field.dbType.toLowerCase().indexOf(\"date\")>=0){\n        return true;\n    }else{\n        return false;\n    }\n};\nreturn true;","enable":true},{"id":"2E7FDA44-989A-4C5B-A0C5-12B1E40E57B1","defName":"索引名-英文及下划线","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"index","programCode":"return /^[a-zA-Z_][a-zA-Z0-9_]*$/.test(data.index.defKey);","enable":true},{"id":"023450B3-AAE2-4DC1-AE63-2196DD82823D","defName":"索引名-主键的名称以pk_开头，唯一键以uk_开头，普通索引以 ix_开头","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"index","programCode":"if(data.index.unique){\n    return data.index.defKey.indexOf(\"uk_\")==0;\n}else{\n    return data.index.defKey.indexOf(\"ix_\")==0;\n}","enable":true},{"id":"1C563E17-262B-4EB6-87F0-203CAC667CF0","defName":"不允许存在blob、text等大字段","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"field","programCode":"if(\"blob,text\".indexOf(data.field.dbType.toLowerCase())>=0){\n    return false;\n}\nreturn true;","enable":true}]}